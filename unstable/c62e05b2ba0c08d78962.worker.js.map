{"version":3,"sources":["../webpack/bootstrap","../node_modules/protobufjs/light.js","../node_modules/protobufjs/src/util.js","../node_modules/protobufjs/src/util/minimal.js","../node_modules/protobufjs/src/enum.js","../node_modules/pako/lib/utils/common.js","../node_modules/protobufjs/src/object.js","../node_modules/protobufjs/src/field.js","../node_modules/protobufjs/src/namespace.js","../node_modules/protobufjs/src/types.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/pako/lib/zlib/messages.js","../node_modules/protobufjs/src/writer.js","../node_modules/protobufjs/src/reader.js","../node_modules/protobufjs/src/oneof.js","../node_modules/protobufjs/src/message.js","../node_modules/pako/index.js","../node_modules/pako/lib/zlib/adler32.js","../node_modules/pako/lib/zlib/crc32.js","../node_modules/pako/lib/utils/strings.js","../node_modules/pako/lib/zlib/zstream.js","../node_modules/pako/lib/zlib/constants.js","../node_modules/@protobufjs/aspromise/index.js","../node_modules/@protobufjs/inquire/index.js","../node_modules/protobufjs/src/rpc.js","../node_modules/protobufjs/src/roots.js","../node_modules/protobufjs/src/encoder.js","../node_modules/protobufjs/src/type.js","../node_modules/protobufjs/src/mapfield.js","../node_modules/protobufjs/src/service.js","../node_modules/protobufjs/src/method.js","../node_modules/protobufjs/src/decoder.js","../node_modules/protobufjs/src/verifier.js","../node_modules/protobufjs/src/converter.js","../node_modules/protobufjs/src/wrappers.js","../node_modules/protobufjs/src/root.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/pako/lib/deflate.js","../node_modules/pako/lib/zlib/deflate.js","../node_modules/pako/lib/zlib/trees.js","../node_modules/pako/lib/inflate.js","../node_modules/pako/lib/zlib/inflate.js","../node_modules/pako/lib/zlib/inffast.js","../node_modules/pako/lib/zlib/inftrees.js","../node_modules/pako/lib/zlib/gzheader.js","../node_modules/protobufjs/src/index-light.js","../node_modules/protobufjs/src/index-minimal.js","../node_modules/webpack/buildin/global.js","../node_modules/@protobufjs/base64/index.js","../node_modules/@protobufjs/eventemitter/index.js","../node_modules/@protobufjs/float/index.js","../node_modules/@protobufjs/utf8/index.js","../node_modules/@protobufjs/pool/index.js","../node_modules/protobufjs/src/util/longbits.js","../node_modules/protobufjs/src/writer_buffer.js","../node_modules/protobufjs/src/reader_buffer.js","../node_modules/protobufjs/src/rpc/service.js","../node_modules/@protobufjs/codegen/index.js","../node_modules/@protobufjs/fetch/index.js","../node_modules/@protobufjs/path/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../src/comlink.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","game/data/protobufs/proto-wrapper.ts","game/data/protobufs/proto-sprite.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","game/net/packets/packet-list.ts","game/data/protobufs/proto-entity.ts","game/data/protobufs/proto-tiles.ts","game/net/packets/terrainPackets.ts","game/net/packets/entityPackets.ts","game/net/packets/util-packets.ts","game/net/packets/media-packets.ts","game/net/messageEncoder.worker.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","Type","Enum","util","roots","codegen","fetch","path","fs","inquire","toArray","keys","array","Array","length","index","toObject","val","undefined","safePropBackslashRe","safePropQuoteRe","isReserved","test","safeProp","prop","replace","ucFirst","str","charAt","toUpperCase","substring","camelCaseRe","camelCase","$0","$1","compareFieldsById","a","b","id","decorateType","ctor","typeName","$type","decorateRoot","remove","add","type","decorateEnumIndex","decorateEnum","enm","merge","dst","src","ifNotSet","newError","CustomError","message","properties","this","Error","captureStackTrace","stack","constructor","toString","asPromise","base64","EventEmitter","float","utf8","pool","LongBits","global","window","self","emptyArray","freeze","emptyObject","isNode","Boolean","process","versions","node","isInteger","Number","isFinite","Math","floor","isString","String","isObject","isset","isSet","obj","isArray","Buffer","utf8Write","e","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","Uint8Array","Long","dcodeIO","key2Re","key32Re","key64Re","longToHash","from","toHash","zeroHash","longFromHash","hash","unsigned","bits","fromHash","fromBits","lo","hi","toNumber","lcFirst","toLowerCase","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","longs","enums","bytes","json","_configure","encoding","allocUnsafe","size","ReflectionObject","className","Namespace","values","options","comment","comments","TypeError","valuesById","reserved","fromJSON","toJSON","keepComments","isReservedId","isReservedName","allow_alias","TYPED_OK","Uint16Array","Int32Array","_has","assign","sources","slice","arguments","source","shift","shrinkBuf","buf","subarray","fnTyped","arraySet","dest","src_offs","len","dest_offs","set","flattenChunks","chunks","pos","chunk","result","fnUntyped","concat","apply","setTyped","on","Buf8","Buf16","Buf32","Root","parent","resolved","filename","defineProperties","root","ptr","fullName","unshift","join","onAdd","_handleAdd","onRemove","_handleRemove","resolve","getOption","setOption","setOptions","Root_","Field","types","ruleRe","rule","extend","required","optional","repeated","map","partOf","typeDefault","defaultValue","long","resolvedType","extensionField","declaringField","_packed","defaults","lookupTypeOrEnum","packed","fromNumber","decode","write","fieldId","fieldType","fieldRule","fieldName","Type_","Service","arrayToJSON","nested","_nestedArray","clearCache","namespace","addJSON","nestedArray","nestedJson","names","fields","methods","getEnum","prev","define","split","part","resolveAll","lookup","filterTypes","parentAlreadyChecked","found","indexOf","lookupType","lookupEnum","lookupService","Service_","Enum_","bake","offset","basic","mapKey","2","1","0","Writer","BufferWriter","Op","fn","next","noop","State","writer","head","tail","states","writeByte","VarintOp","writeVarint64","writeFixed32","alloc","_push","uint32","int32","sint32","uint64","int64","sint64","zzEncode","bool","fixed32","sfixed32","fixed64","sfixed64","writeFloatLE","double","writeDoubleLE","writeBytes","string","fork","reset","ldelim","finish","BufferWriter_","Reader","BufferReader","indexOutOfRange","reader","writeLength","RangeError","buffer","create_array","isBuffer","readLongVarint","readFixed32_end","end","readFixed64","_slice","readFloatLE","readDoubleLE","start","read","skip","skipType","wireType","BufferReader_","zzDecode","OneOf","oneof","fieldsArray","addFieldsToParent","field","push","splice","oneofName","Message","encode","encodeDelimited","decodeDelimited","verify","fromObject","pako","adler","s1","s2","crcTable","table","k","makeTable","crc","utils","STR_APPLY_OK","STR_APPLY_UIA_OK","fromCharCode","__","_utf8len","q","buf2binstring","string2buf","c2","m_pos","str_len","buf_len","charCodeAt","binstring2buf","buf2string","max","out","c_len","utf16buf","utf8border","input","next_in","avail_in","total_in","output","next_out","avail_out","total_out","msg","state","data_type","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","Z_TREES","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_BUF_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","ctx","params","pending","Promise","reject","err","moduleName","mod","eval","mtype","ref","gen","sort","_fieldsArray","keyType","genTypePartial","fieldIndex","group","MapField","encoder","decoder","verifier","converter","wrappers","oneofs","extensions","_fieldsById","_oneofsArray","_ctor","fieldsById","oneofsArray","generateConstructor","ctorProperties","inherited","filter","setup","wrapper","originalThis","target","resolvedKeyType","fieldKeyType","fieldValueType","Method","rpc","_methodsArray","service","methodsArray","rpcImpl","requestDelimited","responseDelimited","method","rpcService","methodName","resolvedRequestType","resolvedResponseType","requestType","responseType","requestStream","responseStream","rfield","missing","seenFirstField","invalid","genVerifyKey","genVerifyValue","oneofProp","expected","j","genValuePartial_fromObject","isUnsigned","genValuePartial_toObject","repeatedFields","mapFields","normalFields","low","high","arrayDefault","hasKs2","type_url","substr","lastIndexOf","parse","common","deferred","files","SYNC","resolvePath","load","callback","sync","cb","getBundledFileName","idx","altname","JSON","parsed","imports","weakImports","queued","weak","setTimeout","readFileSync","loadSync","exposeRe","tryHandleExtension","extendedType","sisterField","parse_","common_","runtime","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","arg","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","__await","then","unwrapped","error","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","mark","setPrototypeOf","__proto__","awrap","async","iter","reverse","pop","skipTempReset","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","zlib_deflate","strings","ZStream","Deflate","level","chunkSize","windowBits","memLevel","strategy","to","opt","raw","gzip","ended","strm","status","deflateInit2","header","deflateSetHeader","dictionary","dict","deflateSetDictionary","_dict_set","deflate","deflator","data","_mode","onEnd","onData","deflateEnd","deflateRaw","configuration_table","trees","adler32","crc32","errorCode","rank","f","zero","flush_pending","pending_buf","pending_out","flush_block_only","last","_tr_flush_block","block_start","strstart","put_byte","putShortMSB","read_buf","longest_match","cur_match","match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","limit","w_size","MAX_MATCH","_win","wmask","w_mask","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","more","_w_size","window_size","hash_size","insert","ins_h","hash_shift","hash_mask","deflate_fast","flush","hash_head","bflush","match_length","_tr_tally","max_lazy_match","MIN_MATCH","last_lit","deflate_slow","max_insert","prev_match","match_available","Config","good_length","max_lazy","nice_length","max_chain","func","DeflateState","pending_buf_size","gzhead","gzindex","last_flush","w_bits","hash_bits","dyn_ltree","HEAP_SIZE","dyn_dtree","bl_tree","l_desc","d_desc","bl_desc","bl_count","MAX_BITS","heap","heap_len","heap_max","depth","l_buf","lit_bufsize","d_buf","opt_len","static_len","matches","bi_buf","bi_valid","deflateResetKeep","_tr_init","deflateReset","ret","max_block_size","max_start","deflateInit","old_flush","beg","text","hcrc","extra","time","os","bstate","deflate_huff","deflate_rle","_tr_align","_tr_stored_block","avail","tmpDict","dictLength","deflateInfo","extra_lbits","extra_dbits","extra_blbits","bl_order","static_ltree","static_dtree","D_CODES","_dist_code","_length_code","base_length","static_l_desc","static_d_desc","static_bl_desc","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","has_stree","TreeDesc","dyn_tree","stat_desc","max_code","d_code","dist","put_short","w","send_bits","send_code","tree","bi_reverse","code","res","gen_codes","next_code","init_block","LITERALS","END_BLOCK","bi_windup","smaller","_n2","_m2","pqdownheap","v","compress_block","ltree","dtree","lc","lx","build_tree","desc","stree","h","xbits","base","overflow","gen_bitlen","scan_tree","curlen","prevlen","nextlen","count","max_count","min_count","REP_3_6","REPZ_3_10","REPZ_11_138","send_tree","static_init_done","stored_len","copy_block","LENGTH_CODES","L_CODES","tr_static_init","opt_lenb","static_lenb","max_blindex","black_mask","detect_data_type","BL_CODES","build_bl_tree","lcodes","dcodes","blcodes","send_all_trees","STATIC_TREES","bi_flush","zlib_inflate","GZheader","Inflate","inflateInit2","inflateGetHeader","inflateSetDictionary","inflate","inflator","next_out_utf8","utf8str","allowBufError","inflateEnd","inflateRaw","ungzip","inflate_fast","inflate_table","zswap32","InflateState","havedict","flags","dmax","check","total","wbits","wsize","whave","wnext","hold","lencode","distcode","lenbits","distbits","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","sane","back","was","inflateResetKeep","inflateReset","inflateReset2","lenfix","distfix","virgin","fixedtables","sym","updatewindow","copy","inflateInit","put","left","_in","_out","from_source","here_bits","here_op","here_val","last_bits","last_op","last_val","opts","here","hbuf","order","inf_leave","xflags","extra_len","inflateInfo","s_window","lcode","dcode","lmask","dmask","op","top","dolen","dodist","lbase","lext","dbase","dext","lens_index","codes","table_index","incr","fill","mask","min","curr","drop","used","huff","base_index","MAXBITS","offs","extra_index","protobuf","build","configure","g","ceil","b64","s64","parts","_listeners","evt","off","listeners","emit","args","factory","Float32Array","f32","f8b","le","writeFloat_f32_cpy","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatBE","readFloatBE","writeFloat_ieee754","writeUint","sign","round","exponent","log","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleBE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","c1","SIZE","MAX","slab","parseInt","fromString","toLong","part0","part1","part2","writeStringBuffer","writeBytesBuffer","byteLength","utf8Slice","rpcCall","requestCtor","responseCtor","request","response","endedByRPC","functionParams","functionName","body","Codegen","formatStringOrScope","verbose","console","scopeKeys","scopeParams","scopeValues","scopeOffset","formatParams","formatOffset","stringify","functionNameOverride","xhr","readFile","contents","XMLHttpRequest","binary","onreadystatechange","readyState","responseText","overrideMimeType","open","send","isAbsolute","normalize","absolute","prefix","originPath","includePath","alreadyNormalized","_arrayLikeToArray","arr","arr2","_unsupportedIterableToArray","minLen","_slicedToArray","_arr","_n","_d","_e","_s","_i","_defineProperty","configurable","writable","_setPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","Parent","Class","instance","_toConsumableArray","proxyMarker","createEndpoint","releaseProxy","throwMarker","transferHandlers","Map","canHandle","serialize","MessageChannel","port1","port2","expose","deserialize","port","createProxy","ep","isProxyReleased","proxy","_target","throwIfProxyReleased","requestResponseMessage","closeEndPoint","fromWireValue","rawValue","toWireValue","transferables","_thisArg","rawArgumentList","processArguments","argumentList","isError","serialized","addEventListener","ev","returnValue","reduce","transfer","catch","wireValue","postMessage","removeEventListener","endpoint","isMessagePort","close","isReleased","processed","transferCache","WeakMap","transfers","F","it","normalCompletion","didErr","step","_e2","handler","random","MAX_SAFE_INTEGER","asyncGeneratorStep","_next","_throw","_asyncToGenerator","_initializerDefineProperty","descriptor","initializer","_classCallCheck","Constructor","_assertThisInitialized","ReferenceError","_inherits","subClass","superClass","_getPrototypeOf","_typeof","_possibleConstructorReturn","_createSuper","Derived","Super","NewTarget","_applyDecoratedDescriptor","decorators","decorator","_defineProperties","props","_createClass","protoProps","staticProps","ProtoWrapper","ProtoSprite","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","getOwnPropertyDescriptor","_objectSpread2","getOwnPropertyDescriptors","ProtoEntity","entity","sprite","owners","ProtoTile","ProtoTileStack","ProtoBoard","TerrainAddPacket","TerrainCoordPacket","TerrainErasePacket","EntityUpdatePacket","EntityDeletePacket","PingPacket","packetList","packetMap","workerEncode","_x","_x2","_workerEncode","_callee","packet","clazz","dat","combined","_context","debug","workerDecode","_x3","_workerDecode","_callee2","_context2","__webpack_exports__"],"mappings":"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","file":"c62e05b2ba0c08d78962.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"https://shadowmoose.github.io/Terra/unstable/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 59);\n","// light library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-light\");","\"use strict\";\n\n/**\n * Various utility functions.\n * @namespace\n */\nvar util = module.exports = require(\"./util/minimal\");\n\nvar roots = require(\"./roots\");\n\nvar Type, // cyclic\n    Enum;\n\nutil.codegen = require(\"@protobufjs/codegen\");\nutil.fetch   = require(\"@protobufjs/fetch\");\nutil.path    = require(\"@protobufjs/path\");\n\n/**\n * Node's fs module if available.\n * @type {Object.<string,*>}\n */\nutil.fs = util.inquire(\"fs\");\n\n/**\n * Converts an object's values to an array.\n * @param {Object.<string,*>} object Object to convert\n * @returns {Array.<*>} Converted array\n */\nutil.toArray = function toArray(object) {\n    if (object) {\n        var keys  = Object.keys(object),\n            array = new Array(keys.length),\n            index = 0;\n        while (index < keys.length)\n            array[index] = object[keys[index++]];\n        return array;\n    }\n    return [];\n};\n\n/**\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\n * @param {Array.<*>} array Array to convert\n * @returns {Object.<string,*>} Converted object\n */\nutil.toObject = function toObject(array) {\n    var object = {},\n        index  = 0;\n    while (index < array.length) {\n        var key = array[index++],\n            val = array[index++];\n        if (val !== undefined)\n            object[key] = val;\n    }\n    return object;\n};\n\nvar safePropBackslashRe = /\\\\/g,\n    safePropQuoteRe     = /\"/g;\n\n/**\n * Tests whether the specified name is a reserved word in JS.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nutil.isReserved = function isReserved(name) {\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\n};\n\n/**\n * Returns a safe property accessor for the specified property name.\n * @param {string} prop Property name\n * @returns {string} Safe accessor\n */\nutil.safeProp = function safeProp(prop) {\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\n    return \".\" + prop;\n};\n\n/**\n * Converts the first character of a string to upper case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.ucFirst = function ucFirst(str) {\n    return str.charAt(0).toUpperCase() + str.substring(1);\n};\n\nvar camelCaseRe = /_([a-z])/g;\n\n/**\n * Converts a string to camel case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.camelCase = function camelCase(str) {\n    return str.substring(0, 1)\n         + str.substring(1)\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\n};\n\n/**\n * Compares reflected fields by id.\n * @param {Field} a First field\n * @param {Field} b Second field\n * @returns {number} Comparison value\n */\nutil.compareFieldsById = function compareFieldsById(a, b) {\n    return a.id - b.id;\n};\n\n/**\n * Decorator helper for types (TypeScript).\n * @param {Constructor<T>} ctor Constructor function\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {Type} Reflected type\n * @template T extends Message<T>\n * @property {Root} root Decorators root\n */\nutil.decorateType = function decorateType(ctor, typeName) {\n\n    /* istanbul ignore if */\n    if (ctor.$type) {\n        if (typeName && ctor.$type.name !== typeName) {\n            util.decorateRoot.remove(ctor.$type);\n            ctor.$type.name = typeName;\n            util.decorateRoot.add(ctor.$type);\n        }\n        return ctor.$type;\n    }\n\n    /* istanbul ignore next */\n    if (!Type)\n        Type = require(\"./type\");\n\n    var type = new Type(typeName || ctor.name);\n    util.decorateRoot.add(type);\n    type.ctor = ctor; // sets up .encode, .decode etc.\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\n    return type;\n};\n\nvar decorateEnumIndex = 0;\n\n/**\n * Decorator helper for enums (TypeScript).\n * @param {Object} object Enum object\n * @returns {Enum} Reflected enum\n */\nutil.decorateEnum = function decorateEnum(object) {\n\n    /* istanbul ignore if */\n    if (object.$type)\n        return object.$type;\n\n    /* istanbul ignore next */\n    if (!Enum)\n        Enum = require(\"./enum\");\n\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\n    util.decorateRoot.add(enm);\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\n    return enm;\n};\n\n/**\n * Decorator root (TypeScript).\n * @name util.decorateRoot\n * @type {Root}\n * @readonly\n */\nObject.defineProperty(util, \"decorateRoot\", {\n    get: function() {\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (require(\"./root\"))());\n    }\n});\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n// global object reference\nutil.global = typeof window !== \"undefined\" && window\n           || typeof global !== \"undefined\" && global\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n * @const\n */\nutil.isNode = Boolean(util.global.process && util.global.process.versions && util.global.process.versions.node);\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Enum;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\n\nvar Namespace = require(\"./namespace\"),\n    util = require(\"./util\");\n\n/**\n * Constructs a new enum instance.\n * @classdesc Reflected enum.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {Object.<string,number>} [values] Enum values as an object, by name\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this enum\n * @param {Object.<string,string>} [comments] The value comments for this enum\n */\nfunction Enum(name, values, options, comment, comments) {\n    ReflectionObject.call(this, name, options);\n\n    if (values && typeof values !== \"object\")\n        throw TypeError(\"values must be an object\");\n\n    /**\n     * Enum values by id.\n     * @type {Object.<number,string>}\n     */\n    this.valuesById = {};\n\n    /**\n     * Enum values by name.\n     * @type {Object.<string,number>}\n     */\n    this.values = Object.create(this.valuesById); // toJSON, marker\n\n    /**\n     * Enum comment text.\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Value comment texts, if any.\n     * @type {Object.<string,string>}\n     */\n    this.comments = comments || {};\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    // Note that values inherit valuesById on their prototype which makes them a TypeScript-\n    // compatible enum. This is used by pbts to write actual enum definitions that work for\n    // static and reflection code alike instead of emitting generic object definitions.\n\n    if (values)\n        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)\n            if (typeof values[keys[i]] === \"number\") // use forward entries only\n                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];\n}\n\n/**\n * Enum descriptor.\n * @interface IEnum\n * @property {Object.<string,number>} values Enum values\n * @property {Object.<string,*>} [options] Enum options\n */\n\n/**\n * Constructs an enum from an enum descriptor.\n * @param {string} name Enum name\n * @param {IEnum} json Enum descriptor\n * @returns {Enum} Created enum\n * @throws {TypeError} If arguments are invalid\n */\nEnum.fromJSON = function fromJSON(name, json) {\n    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\n    enm.reserved = json.reserved;\n    return enm;\n};\n\n/**\n * Converts this enum to an enum descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IEnum} Enum descriptor\n */\nEnum.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"  , this.options,\n        \"values\"   , this.values,\n        \"reserved\" , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"comment\"  , keepComments ? this.comment : undefined,\n        \"comments\" , keepComments ? this.comments : undefined\n    ]);\n};\n\n/**\n * Adds a value to this enum.\n * @param {string} name Value name\n * @param {number} id Value id\n * @param {string} [comment] Comment, if any\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a value with this name or id\n */\nEnum.prototype.add = function add(name, id, comment) {\n    // utilized by the parser but not by .fromJSON\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (!util.isInteger(id))\n        throw TypeError(\"id must be an integer\");\n\n    if (this.values[name] !== undefined)\n        throw Error(\"duplicate name '\" + name + \"' in \" + this);\n\n    if (this.isReservedId(id))\n        throw Error(\"id \" + id + \" is reserved in \" + this);\n\n    if (this.isReservedName(name))\n        throw Error(\"name '\" + name + \"' is reserved in \" + this);\n\n    if (this.valuesById[id] !== undefined) {\n        if (!(this.options && this.options.allow_alias))\n            throw Error(\"duplicate id \" + id + \" in \" + this);\n        this.values[name] = id;\n    } else\n        this.valuesById[this.values[name] = id] = name;\n\n    this.comments[name] = comment || null;\n    return this;\n};\n\n/**\n * Removes a value from this enum\n * @param {string} name Value name\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `name` is not a name of this enum\n */\nEnum.prototype.remove = function remove(name) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    var val = this.values[name];\n    if (val == null)\n        throw Error(\"name '\" + name + \"' does not exist in \" + this);\n\n    delete this.valuesById[val];\n    delete this.values[name];\n    delete this.comments[name];\n\n    return this;\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n","'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\nfunction _has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n","\"use strict\";\nmodule.exports = ReflectionObject;\n\nReflectionObject.className = \"ReflectionObject\";\n\nvar util = require(\"./util\");\n\nvar Root; // cyclic\n\n/**\n * Constructs a new reflection object instance.\n * @classdesc Base class of all reflection objects.\n * @constructor\n * @param {string} name Object name\n * @param {Object.<string,*>} [options] Declared options\n * @abstract\n */\nfunction ReflectionObject(name, options) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (options && !util.isObject(options))\n        throw TypeError(\"options must be an object\");\n\n    /**\n     * Options.\n     * @type {Object.<string,*>|undefined}\n     */\n    this.options = options; // toJSON\n\n    /**\n     * Unique name within its namespace.\n     * @type {string}\n     */\n    this.name = name;\n\n    /**\n     * Parent namespace.\n     * @type {Namespace|null}\n     */\n    this.parent = null;\n\n    /**\n     * Whether already resolved or not.\n     * @type {boolean}\n     */\n    this.resolved = false;\n\n    /**\n     * Comment text, if any.\n     * @type {string|null}\n     */\n    this.comment = null;\n\n    /**\n     * Defining file name.\n     * @type {string|null}\n     */\n    this.filename = null;\n}\n\nObject.defineProperties(ReflectionObject.prototype, {\n\n    /**\n     * Reference to the root namespace.\n     * @name ReflectionObject#root\n     * @type {Root}\n     * @readonly\n     */\n    root: {\n        get: function() {\n            var ptr = this;\n            while (ptr.parent !== null)\n                ptr = ptr.parent;\n            return ptr;\n        }\n    },\n\n    /**\n     * Full name including leading dot.\n     * @name ReflectionObject#fullName\n     * @type {string}\n     * @readonly\n     */\n    fullName: {\n        get: function() {\n            var path = [ this.name ],\n                ptr = this.parent;\n            while (ptr) {\n                path.unshift(ptr.name);\n                ptr = ptr.parent;\n            }\n            return path.join(\".\");\n        }\n    }\n});\n\n/**\n * Converts this reflection object to its descriptor representation.\n * @returns {Object.<string,*>} Descriptor\n * @abstract\n */\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\n    throw Error(); // not implemented, shouldn't happen\n};\n\n/**\n * Called when this object is added to a parent.\n * @param {ReflectionObject} parent Parent added to\n * @returns {undefined}\n */\nReflectionObject.prototype.onAdd = function onAdd(parent) {\n    if (this.parent && this.parent !== parent)\n        this.parent.remove(this);\n    this.parent = parent;\n    this.resolved = false;\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleAdd(this);\n};\n\n/**\n * Called when this object is removed from a parent.\n * @param {ReflectionObject} parent Parent removed from\n * @returns {undefined}\n */\nReflectionObject.prototype.onRemove = function onRemove(parent) {\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleRemove(this);\n    this.parent = null;\n    this.resolved = false;\n};\n\n/**\n * Resolves this objects type references.\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n    if (this.root instanceof Root)\n        this.resolved = true; // only if part of a root\n    return this;\n};\n\n/**\n * Gets an option value.\n * @param {string} name Option name\n * @returns {*} Option value or `undefined` if not set\n */\nReflectionObject.prototype.getOption = function getOption(name) {\n    if (this.options)\n        return this.options[name];\n    return undefined;\n};\n\n/**\n * Sets an option.\n * @param {string} name Option name\n * @param {*} value Option value\n * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (!ifNotSet || !this.options || this.options[name] === undefined)\n        (this.options || (this.options = {}))[name] = value;\n    return this;\n};\n\n/**\n * Sets multiple options.\n * @param {Object.<string,*>} options Options to set\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\n    if (options)\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\n    return this;\n};\n\n/**\n * Converts this instance to its string representation.\n * @returns {string} Class name[, space, full name]\n */\nReflectionObject.prototype.toString = function toString() {\n    var className = this.constructor.className,\n        fullName  = this.fullName;\n    if (fullName.length)\n        return className + \" \" + fullName;\n    return className;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nReflectionObject._configure = function(Root_) {\n    Root = Root_;\n};\n","\"use strict\";\nmodule.exports = Field;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\n\nvar Enum  = require(\"./enum\"),\n    types = require(\"./types\"),\n    util  = require(\"./util\");\n\nvar Type; // cyclic\n\nvar ruleRe = /^required|optional|repeated$/;\n\n/**\n * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\n * @name Field\n * @classdesc Reflected message field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a field from a field descriptor.\n * @param {string} name Field name\n * @param {IField} json Field descriptor\n * @returns {Field} Created field\n * @throws {TypeError} If arguments are invalid\n */\nField.fromJSON = function fromJSON(name, json) {\n    return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\n};\n\n/**\n * Not an actual constructor. Use {@link Field} instead.\n * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports FieldBase\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction Field(name, id, type, rule, extend, options, comment) {\n\n    if (util.isObject(rule)) {\n        comment = extend;\n        options = rule;\n        rule = extend = undefined;\n    } else if (util.isObject(extend)) {\n        comment = options;\n        options = extend;\n        extend = undefined;\n    }\n\n    ReflectionObject.call(this, name, options);\n\n    if (!util.isInteger(id) || id < 0)\n        throw TypeError(\"id must be a non-negative integer\");\n\n    if (!util.isString(type))\n        throw TypeError(\"type must be a string\");\n\n    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))\n        throw TypeError(\"rule must be a string rule\");\n\n    if (extend !== undefined && !util.isString(extend))\n        throw TypeError(\"extend must be a string\");\n\n    /**\n     * Field rule, if any.\n     * @type {string|undefined}\n     */\n    this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\n\n    /**\n     * Field type.\n     * @type {string}\n     */\n    this.type = type; // toJSON\n\n    /**\n     * Unique field id.\n     * @type {number}\n     */\n    this.id = id; // toJSON, marker\n\n    /**\n     * Extended type if different from parent.\n     * @type {string|undefined}\n     */\n    this.extend = extend || undefined; // toJSON\n\n    /**\n     * Whether this field is required.\n     * @type {boolean}\n     */\n    this.required = rule === \"required\";\n\n    /**\n     * Whether this field is optional.\n     * @type {boolean}\n     */\n    this.optional = !this.required;\n\n    /**\n     * Whether this field is repeated.\n     * @type {boolean}\n     */\n    this.repeated = rule === \"repeated\";\n\n    /**\n     * Whether this field is a map or not.\n     * @type {boolean}\n     */\n    this.map = false;\n\n    /**\n     * Message this field belongs to.\n     * @type {Type|null}\n     */\n    this.message = null;\n\n    /**\n     * OneOf this field belongs to, if any,\n     * @type {OneOf|null}\n     */\n    this.partOf = null;\n\n    /**\n     * The field type's default value.\n     * @type {*}\n     */\n    this.typeDefault = null;\n\n    /**\n     * The field's default value on prototypes.\n     * @type {*}\n     */\n    this.defaultValue = null;\n\n    /**\n     * Whether this field's value should be treated as a long.\n     * @type {boolean}\n     */\n    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;\n\n    /**\n     * Whether this field's value is a buffer.\n     * @type {boolean}\n     */\n    this.bytes = type === \"bytes\";\n\n    /**\n     * Resolved type if not a basic type.\n     * @type {Type|Enum|null}\n     */\n    this.resolvedType = null;\n\n    /**\n     * Sister-field within the extended type if a declaring extension field.\n     * @type {Field|null}\n     */\n    this.extensionField = null;\n\n    /**\n     * Sister-field within the declaring namespace if an extended field.\n     * @type {Field|null}\n     */\n    this.declaringField = null;\n\n    /**\n     * Internally remembers whether this field is packed.\n     * @type {boolean|null}\n     * @private\n     */\n    this._packed = null;\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Determines whether this field is packed. Only relevant when repeated and working with proto2.\n * @name Field#packed\n * @type {boolean}\n * @readonly\n */\nObject.defineProperty(Field.prototype, \"packed\", {\n    get: function() {\n        // defaults to packed=true if not explicity set to false\n        if (this._packed === null)\n            this._packed = this.getOption(\"packed\") !== false;\n        return this._packed;\n    }\n});\n\n/**\n * @override\n */\nField.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (name === \"packed\") // clear cached before setting\n        this._packed = null;\n    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\n};\n\n/**\n * Field descriptor.\n * @interface IField\n * @property {string} [rule=\"optional\"] Field rule\n * @property {string} type Field type\n * @property {number} id Field id\n * @property {Object.<string,*>} [options] Field options\n */\n\n/**\n * Extension field descriptor.\n * @interface IExtensionField\n * @extends IField\n * @property {string} extend Extended type\n */\n\n/**\n * Converts this field to a field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IField} Field descriptor\n */\nField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"rule\"    , this.rule !== \"optional\" && this.rule || undefined,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Resolves this field's type references.\n * @returns {Field} `this`\n * @throws {Error} If any reference cannot be resolved\n */\nField.prototype.resolve = function resolve() {\n\n    if (this.resolved)\n        return this;\n\n    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it\n        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\n        if (this.resolvedType instanceof Type)\n            this.typeDefault = null;\n        else // instanceof Enum\n            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\n    }\n\n    // use explicitly set default value if present\n    if (this.options && this.options[\"default\"] != null) {\n        this.typeDefault = this.options[\"default\"];\n        if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")\n            this.typeDefault = this.resolvedType.values[this.typeDefault];\n    }\n\n    // remove unnecessary options\n    if (this.options) {\n        if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))\n            delete this.options.packed;\n        if (!Object.keys(this.options).length)\n            this.options = undefined;\n    }\n\n    // convert to internal data type if necesssary\n    if (this.long) {\n        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");\n\n        /* istanbul ignore else */\n        if (Object.freeze)\n            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)\n\n    } else if (this.bytes && typeof this.typeDefault === \"string\") {\n        var buf;\n        if (util.base64.test(this.typeDefault))\n            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);\n        else\n            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\n        this.typeDefault = buf;\n    }\n\n    // take special care of maps and repeated fields\n    if (this.map)\n        this.defaultValue = util.emptyObject;\n    else if (this.repeated)\n        this.defaultValue = util.emptyArray;\n    else\n        this.defaultValue = this.typeDefault;\n\n    // ensure proper value on prototype\n    if (this.parent instanceof Type)\n        this.parent.ctor.prototype[this.name] = this.defaultValue;\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n\n/**\n * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\n * @typedef FieldDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} fieldName Field name\n * @returns {undefined}\n */\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @param {T} [defaultValue] Default value\n * @returns {FieldDecorator} Decorator function\n * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\n */\nField.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\n\n    // submessage: decorate the submessage and use its name as the type\n    if (typeof fieldType === \"function\")\n        fieldType = util.decorateType(fieldType).name;\n\n    // enum reference: create a reflected copy of the enum and keep reuseing it\n    else if (fieldType && typeof fieldType === \"object\")\n        fieldType = util.decorateEnum(fieldType).name;\n\n    return function fieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { \"default\": defaultValue }));\n    };\n};\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {Constructor<T>|string} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @returns {FieldDecorator} Decorator function\n * @template T extends Message<T>\n * @variation 2\n */\n// like Field.d but without a default value\n\n// Sets up cyclic dependencies (called in index-light)\nField._configure = function configure(Type_) {\n    Type = Type_;\n};\n","\"use strict\";\nmodule.exports = Namespace;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\n\nvar Field    = require(\"./field\"),\n    util     = require(\"./util\");\n\nvar Type,    // cyclic\n    Service,\n    Enum;\n\n/**\n * Constructs a new namespace instance.\n * @name Namespace\n * @classdesc Reflected namespace.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a namespace from JSON.\n * @memberof Namespace\n * @function\n * @param {string} name Namespace name\n * @param {Object.<string,*>} json JSON object\n * @returns {Namespace} Created namespace\n * @throws {TypeError} If arguments are invalid\n */\nNamespace.fromJSON = function fromJSON(name, json) {\n    return new Namespace(name, json.options).addJSON(json.nested);\n};\n\n/**\n * Converts an array of reflection objects to JSON.\n * @memberof Namespace\n * @param {ReflectionObject[]} array Object array\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\n */\nfunction arrayToJSON(array, toJSONOptions) {\n    if (!(array && array.length))\n        return undefined;\n    var obj = {};\n    for (var i = 0; i < array.length; ++i)\n        obj[array[i].name] = array[i].toJSON(toJSONOptions);\n    return obj;\n}\n\nNamespace.arrayToJSON = arrayToJSON;\n\n/**\n * Tests if the specified id is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedId = function isReservedId(reserved, id) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] > id)\n                return true;\n    return false;\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedName = function isReservedName(reserved, name) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (reserved[i] === name)\n                return true;\n    return false;\n};\n\n/**\n * Not an actual constructor. Use {@link Namespace} instead.\n * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports NamespaceBase\n * @extends ReflectionObject\n * @abstract\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n * @see {@link Namespace}\n */\nfunction Namespace(name, options) {\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Nested objects by name.\n     * @type {Object.<string,ReflectionObject>|undefined}\n     */\n    this.nested = undefined; // toJSON\n\n    /**\n     * Cached nested objects as an array.\n     * @type {ReflectionObject[]|null}\n     * @private\n     */\n    this._nestedArray = null;\n}\n\nfunction clearCache(namespace) {\n    namespace._nestedArray = null;\n    return namespace;\n}\n\n/**\n * Nested objects of this namespace as an array for iteration.\n * @name NamespaceBase#nestedArray\n * @type {ReflectionObject[]}\n * @readonly\n */\nObject.defineProperty(Namespace.prototype, \"nestedArray\", {\n    get: function() {\n        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\n    }\n});\n\n/**\n * Namespace descriptor.\n * @interface INamespace\n * @property {Object.<string,*>} [options] Namespace options\n * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\n */\n\n/**\n * Any extension field descriptor.\n * @typedef AnyExtensionField\n * @type {IExtensionField|IExtensionMapField}\n */\n\n/**\n * Any nested object descriptor.\n * @typedef AnyNestedObject\n * @type {IEnum|IType|IService|AnyExtensionField|INamespace}\n */\n// ^ BEWARE: VSCode hangs forever when using more than 5 types (that's why AnyExtensionField exists in the first place)\n\n/**\n * Converts this namespace to a namespace descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {INamespace} Namespace descriptor\n */\nNamespace.prototype.toJSON = function toJSON(toJSONOptions) {\n    return util.toObject([\n        \"options\" , this.options,\n        \"nested\"  , arrayToJSON(this.nestedArray, toJSONOptions)\n    ]);\n};\n\n/**\n * Adds nested objects to this namespace from nested object descriptors.\n * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\n * @returns {Namespace} `this`\n */\nNamespace.prototype.addJSON = function addJSON(nestedJson) {\n    var ns = this;\n    /* istanbul ignore else */\n    if (nestedJson) {\n        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\n            nested = nestedJson[names[i]];\n            ns.add( // most to least likely\n                ( nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : nested.id !== undefined\n                ? Field.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    }\n    return this;\n};\n\n/**\n * Gets the nested object of the specified name.\n * @param {string} name Nested object name\n * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\n */\nNamespace.prototype.get = function get(name) {\n    return this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Gets the values of the nested {@link Enum|enum} of the specified name.\n * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\n * @param {string} name Nested enum name\n * @returns {Object.<string,number>} Enum values\n * @throws {Error} If there is no such enum\n */\nNamespace.prototype.getEnum = function getEnum(name) {\n    if (this.nested && this.nested[name] instanceof Enum)\n        return this.nested[name].values;\n    throw Error(\"no such enum: \" + name);\n};\n\n/**\n * Adds a nested object to this namespace.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name\n */\nNamespace.prototype.add = function add(object) {\n\n    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type || object instanceof Enum || object instanceof Service || object instanceof Namespace))\n        throw TypeError(\"object must be a valid nested object\");\n\n    if (!this.nested)\n        this.nested = {};\n    else {\n        var prev = this.get(object.name);\n        if (prev) {\n            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\n                // replace plain namespace but keep existing nested elements and options\n                var nested = prev.nestedArray;\n                for (var i = 0; i < nested.length; ++i)\n                    object.add(nested[i]);\n                this.remove(prev);\n                if (!this.nested)\n                    this.nested = {};\n                object.setOptions(prev.options, true);\n\n            } else\n                throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n        }\n    }\n    this.nested[object.name] = object;\n    object.onAdd(this);\n    return clearCache(this);\n};\n\n/**\n * Removes a nested object from this namespace.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this namespace\n */\nNamespace.prototype.remove = function remove(object) {\n\n    if (!(object instanceof ReflectionObject))\n        throw TypeError(\"object must be a ReflectionObject\");\n    if (object.parent !== this)\n        throw Error(object + \" is not a member of \" + this);\n\n    delete this.nested[object.name];\n    if (!Object.keys(this.nested).length)\n        this.nested = undefined;\n\n    object.onRemove(this);\n    return clearCache(this);\n};\n\n/**\n * Defines additial namespaces within this one if not yet existing.\n * @param {string|string[]} path Path to create\n * @param {*} [json] Nested types to create from JSON\n * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\n */\nNamespace.prototype.define = function define(path, json) {\n\n    if (util.isString(path))\n        path = path.split(\".\");\n    else if (!Array.isArray(path))\n        throw TypeError(\"illegal path\");\n    if (path && path.length && path[0] === \"\")\n        throw Error(\"path must be relative\");\n\n    var ptr = this;\n    while (path.length > 0) {\n        var part = path.shift();\n        if (ptr.nested && ptr.nested[part]) {\n            ptr = ptr.nested[part];\n            if (!(ptr instanceof Namespace))\n                throw Error(\"path conflicts with non-namespace objects\");\n        } else\n            ptr.add(ptr = new Namespace(part));\n    }\n    if (json)\n        ptr.addJSON(json);\n    return ptr;\n};\n\n/**\n * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\n * @returns {Namespace} `this`\n */\nNamespace.prototype.resolveAll = function resolveAll() {\n    var nested = this.nestedArray, i = 0;\n    while (i < nested.length)\n        if (nested[i] instanceof Namespace)\n            nested[i++].resolveAll();\n        else\n            nested[i++].resolve();\n    return this.resolve();\n};\n\n/**\n * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\n * @param {string|string[]} path Path to look up\n * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\n * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n */\nNamespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\n\n    /* istanbul ignore next */\n    if (typeof filterTypes === \"boolean\") {\n        parentAlreadyChecked = filterTypes;\n        filterTypes = undefined;\n    } else if (filterTypes && !Array.isArray(filterTypes))\n        filterTypes = [ filterTypes ];\n\n    if (util.isString(path) && path.length) {\n        if (path === \".\")\n            return this.root;\n        path = path.split(\".\");\n    } else if (!path.length)\n        return this;\n\n    // Start at root if path is absolute\n    if (path[0] === \"\")\n        return this.root.lookup(path.slice(1), filterTypes);\n\n    // Test if the first part matches any nested object, and if so, traverse if path contains more\n    var found = this.get(path[0]);\n    if (found) {\n        if (path.length === 1) {\n            if (!filterTypes || filterTypes.indexOf(found.constructor) > -1)\n                return found;\n        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true)))\n            return found;\n\n    // Otherwise try each nested namespace\n    } else\n        for (var i = 0; i < this.nestedArray.length; ++i)\n            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true)))\n                return found;\n\n    // If there hasn't been a match, try again at the parent\n    if (this.parent === null || parentAlreadyChecked)\n        return null;\n    return this.parent.lookup(path, filterTypes);\n};\n\n/**\n * Looks up the reflection object at the specified path, relative to this namespace.\n * @name NamespaceBase#lookup\n * @function\n * @param {string|string[]} path Path to look up\n * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n * @variation 2\n */\n// lookup(path: string, [parentAlreadyChecked: boolean])\n\n/**\n * Looks up the {@link Type|type} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type\n * @throws {Error} If `path` does not point to a type\n */\nNamespace.prototype.lookupType = function lookupType(path) {\n    var found = this.lookup(path, [ Type ]);\n    if (!found)\n        throw Error(\"no such type: \" + path);\n    return found;\n};\n\n/**\n * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Enum} Looked up enum\n * @throws {Error} If `path` does not point to an enum\n */\nNamespace.prototype.lookupEnum = function lookupEnum(path) {\n    var found = this.lookup(path, [ Enum ]);\n    if (!found)\n        throw Error(\"no such Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type or enum\n * @throws {Error} If `path` does not point to a type or enum\n */\nNamespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\n    var found = this.lookup(path, [ Type, Enum ]);\n    if (!found)\n        throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Service|service} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Service} Looked up service\n * @throws {Error} If `path` does not point to a service\n */\nNamespace.prototype.lookupService = function lookupService(path) {\n    var found = this.lookup(path, [ Service ]);\n    if (!found)\n        throw Error(\"no such Service '\" + path + \"' in \" + this);\n    return found;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nNamespace._configure = function(Type_, Service_, Enum_) {\n    Type    = Type_;\n    Service = Service_;\n    Enum    = Enum_;\n};\n","\"use strict\";\n\n/**\n * Common type constants.\n * @namespace\n */\nvar types = exports;\n\nvar util = require(\"./util\");\n\nvar s = [\n    \"double\",   // 0\n    \"float\",    // 1\n    \"int32\",    // 2\n    \"uint32\",   // 3\n    \"sint32\",   // 4\n    \"fixed32\",  // 5\n    \"sfixed32\", // 6\n    \"int64\",    // 7\n    \"uint64\",   // 8\n    \"sint64\",   // 9\n    \"fixed64\",  // 10\n    \"sfixed64\", // 11\n    \"bool\",     // 12\n    \"string\",   // 13\n    \"bytes\"     // 14\n];\n\nfunction bake(values, offset) {\n    var i = 0, o = {};\n    offset |= 0;\n    while (i < values.length) o[s[i + offset]] = values[i++];\n    return o;\n}\n\n/**\n * Basic type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n * @property {number} bytes=2 Ldelim wire type\n */\ntypes.basic = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2,\n    /* bytes    */ 2\n]);\n\n/**\n * Basic type defaults.\n * @type {Object.<string,*>}\n * @const\n * @property {number} double=0 Double default\n * @property {number} float=0 Float default\n * @property {number} int32=0 Int32 default\n * @property {number} uint32=0 Uint32 default\n * @property {number} sint32=0 Sint32 default\n * @property {number} fixed32=0 Fixed32 default\n * @property {number} sfixed32=0 Sfixed32 default\n * @property {number} int64=0 Int64 default\n * @property {number} uint64=0 Uint64 default\n * @property {number} sint64=0 Sint32 default\n * @property {number} fixed64=0 Fixed64 default\n * @property {number} sfixed64=0 Sfixed64 default\n * @property {boolean} bool=false Bool default\n * @property {string} string=\"\" String default\n * @property {Array.<number>} bytes=Array(0) Bytes default\n * @property {null} message=null Message default\n */\ntypes.defaults = bake([\n    /* double   */ 0,\n    /* float    */ 0,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 0,\n    /* sfixed32 */ 0,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 0,\n    /* sfixed64 */ 0,\n    /* bool     */ false,\n    /* string   */ \"\",\n    /* bytes    */ util.emptyArray,\n    /* message  */ null\n]);\n\n/**\n * Basic long type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n */\ntypes.long = bake([\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1\n], 7);\n\n/**\n * Allowed types for map keys with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n */\ntypes.mapKey = bake([\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2\n], 2);\n\n/**\n * Allowed types for packed repeated fields with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n */\ntypes.packed = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0\n]);\n","module.exports = require(\"regenerator-runtime\");\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = OneOf;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\n\nvar Field = require(\"./field\"),\n    util  = require(\"./util\");\n\n/**\n * Constructs a new oneof instance.\n * @classdesc Reflected oneof.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Oneof name\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction OneOf(name, fieldNames, options, comment) {\n    if (!Array.isArray(fieldNames)) {\n        options = fieldNames;\n        fieldNames = undefined;\n    }\n    ReflectionObject.call(this, name, options);\n\n    /* istanbul ignore if */\n    if (!(fieldNames === undefined || Array.isArray(fieldNames)))\n        throw TypeError(\"fieldNames must be an Array\");\n\n    /**\n     * Field names that belong to this oneof.\n     * @type {string[]}\n     */\n    this.oneof = fieldNames || []; // toJSON, marker\n\n    /**\n     * Fields that belong to this oneof as an array for iteration.\n     * @type {Field[]}\n     * @readonly\n     */\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Oneof descriptor.\n * @interface IOneOf\n * @property {Array.<string>} oneof Oneof field names\n * @property {Object.<string,*>} [options] Oneof options\n */\n\n/**\n * Constructs a oneof from a oneof descriptor.\n * @param {string} name Oneof name\n * @param {IOneOf} json Oneof descriptor\n * @returns {OneOf} Created oneof\n * @throws {TypeError} If arguments are invalid\n */\nOneOf.fromJSON = function fromJSON(name, json) {\n    return new OneOf(name, json.oneof, json.options, json.comment);\n};\n\n/**\n * Converts this oneof to a oneof descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IOneOf} Oneof descriptor\n */\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , this.options,\n        \"oneof\"   , this.oneof,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Adds the fields of the specified oneof to the parent if not already done so.\n * @param {OneOf} oneof The oneof\n * @returns {undefined}\n * @inner\n * @ignore\n */\nfunction addFieldsToParent(oneof) {\n    if (oneof.parent)\n        for (var i = 0; i < oneof.fieldsArray.length; ++i)\n            if (!oneof.fieldsArray[i].parent)\n                oneof.parent.add(oneof.fieldsArray[i]);\n}\n\n/**\n * Adds a field to this oneof and removes it from its current parent, if any.\n * @param {Field} field Field to add\n * @returns {OneOf} `this`\n */\nOneOf.prototype.add = function add(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    if (field.parent && field.parent !== this.parent)\n        field.parent.remove(field);\n    this.oneof.push(field.name);\n    this.fieldsArray.push(field);\n    field.partOf = this; // field.parent remains null\n    addFieldsToParent(this);\n    return this;\n};\n\n/**\n * Removes a field from this oneof and puts it back to the oneof's parent.\n * @param {Field} field Field to remove\n * @returns {OneOf} `this`\n */\nOneOf.prototype.remove = function remove(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    var index = this.fieldsArray.indexOf(field);\n\n    /* istanbul ignore if */\n    if (index < 0)\n        throw Error(field + \" is not a member of \" + this);\n\n    this.fieldsArray.splice(index, 1);\n    index = this.oneof.indexOf(field.name);\n\n    /* istanbul ignore else */\n    if (index > -1) // theoretical\n        this.oneof.splice(index, 1);\n\n    field.partOf = null;\n    return this;\n};\n\n/**\n * @override\n */\nOneOf.prototype.onAdd = function onAdd(parent) {\n    ReflectionObject.prototype.onAdd.call(this, parent);\n    var self = this;\n    // Collect present fields\n    for (var i = 0; i < this.oneof.length; ++i) {\n        var field = parent.get(this.oneof[i]);\n        if (field && !field.partOf) {\n            field.partOf = self;\n            self.fieldsArray.push(field);\n        }\n    }\n    // Add not yet present fields\n    addFieldsToParent(this);\n};\n\n/**\n * @override\n */\nOneOf.prototype.onRemove = function onRemove(parent) {\n    for (var i = 0, field; i < this.fieldsArray.length; ++i)\n        if ((field = this.fieldsArray[i]).parent)\n            field.parent.remove(field);\n    ReflectionObject.prototype.onRemove.call(this, parent);\n};\n\n/**\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\n * @typedef OneOfDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} oneofName OneOf name\n * @returns {undefined}\n */\n\n/**\n * OneOf decorator (TypeScript).\n * @function\n * @param {...string} fieldNames Field names\n * @returns {OneOfDecorator} Decorator function\n * @template T extends string\n */\nOneOf.d = function decorateOneOf() {\n    var fieldNames = new Array(arguments.length),\n        index = 0;\n    while (index < arguments.length)\n        fieldNames[index] = arguments[index++];\n    return function oneOfDecorator(prototype, oneofName) {\n        util.decorateType(prototype.constructor)\n            .add(new OneOf(oneofName, fieldNames));\n        Object.defineProperty(prototype, oneofName, {\n            get: util.oneOfGetter(fieldNames),\n            set: util.oneOfSetter(fieldNames)\n        });\n    };\n};\n","\"use strict\";\nmodule.exports = Message;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new message instance.\n * @classdesc Abstract runtime message.\n * @constructor\n * @param {Properties<T>} [properties] Properties to set\n * @template T extends object = object\n */\nfunction Message(properties) {\n    // not used internally\n    if (properties)\n        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n            this[keys[i]] = properties[keys[i]];\n}\n\n/**\n * Reference to the reflected type.\n * @name Message.$type\n * @type {Type}\n * @readonly\n */\n\n/**\n * Reference to the reflected type.\n * @name Message#$type\n * @type {Type}\n * @readonly\n */\n\n/*eslint-disable valid-jsdoc*/\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<T>} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.create = function create(properties) {\n    return this.$type.create(properties);\n};\n\n/**\n * Encodes a message of this type.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encode = function encode(message, writer) {\n    return this.$type.encode(message, writer);\n};\n\n/**\n * Encodes a message of this type preceeded by its length as a varint.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.$type.encodeDelimited(message, writer);\n};\n\n/**\n * Decodes a message of this type.\n * @name Message.decode\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decode = function decode(reader) {\n    return this.$type.decode(reader);\n};\n\n/**\n * Decodes a message of this type preceeded by its length as a varint.\n * @name Message.decodeDelimited\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decodeDelimited = function decodeDelimited(reader) {\n    return this.$type.decodeDelimited(reader);\n};\n\n/**\n * Verifies a message of this type.\n * @name Message.verify\n * @function\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {string|null} `null` if valid, otherwise the reason why it is not\n */\nMessage.verify = function verify(message) {\n    return this.$type.verify(message);\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object\n * @returns {T} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.fromObject = function fromObject(object) {\n    return this.$type.fromObject(object);\n};\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {T} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.toObject = function toObject(message, options) {\n    return this.$type.toObject(message, options);\n};\n\n/**\n * Converts this message to JSON.\n * @returns {Object.<string,*>} JSON object\n */\nMessage.prototype.toJSON = function toJSON() {\n    return this.$type.toObject(this, util.toJSONOptions);\n};\n\n/*eslint-enable valid-jsdoc*/","// Top level file is just a mixin of submodules & constants\n'use strict';\n\nvar assign    = require('./lib/utils/common').assign;\n\nvar deflate   = require('./lib/deflate');\nvar inflate   = require('./lib/inflate');\nvar constants = require('./lib/zlib/constants');\n\nvar pako = {};\n\nassign(pako, deflate, inflate, constants);\n\nmodule.exports = pako;\n","'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n\nmodule.exports = adler32;\n","'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n      end = pos + len;\n\n  crc ^= -1;\n\n  for (var i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n\nmodule.exports = crc32;\n","// String encode/decode helpers\n'use strict';\n\n\nvar utils = require('./common');\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nvar STR_APPLY_OK = true;\nvar STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, [ 0 ]); } catch (__) { STR_APPLY_OK = false; }\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nvar _utf8len = new utils.Buf8(256);\nfor (var q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nexports.string2buf = function (str) {\n  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new utils.Buf8(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper (used in 2 places)\nfunction buf2binstring(buf, len) {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {\n      return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));\n    }\n  }\n\n  var result = '';\n  for (var i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n}\n\n\n// Convert byte array to binary string\nexports.buf2binstring = function (buf) {\n  return buf2binstring(buf, buf.length);\n};\n\n\n// Convert binary string (typed, when possible)\nexports.binstring2buf = function (str) {\n  var buf = new utils.Buf8(str.length);\n  for (var i = 0, len = buf.length; i < len; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n};\n\n\n// convert array to string\nexports.buf2string = function (buf, max) {\n  var i, out, c, c_len;\n  var len = max || buf.length;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  var utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nexports.utf8border = function (buf, max) {\n  var pos;\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\nmodule.exports = encoder;\n\nvar Enum     = require(\"./enum\"),\n    types    = require(\"./types\"),\n    util     = require(\"./util\");\n\n/**\n * Generates a partial message type encoder.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genTypePartial(gen, field, fieldIndex, ref) {\n    return field.resolvedType.group\n        ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)\n        : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\n}\n\n/**\n * Generates an encoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction encoder(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")\n    (\"if(!w)\")\n        (\"w=Writer.create()\");\n\n    var i, ref;\n\n    // \"when a message is serialized its known fields should be written sequentially by field number\"\n    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);\n\n    for (var i = 0; i < fields.length; ++i) {\n        var field    = fields[i].resolve(),\n            index    = mtype._fieldsArray.indexOf(field),\n            type     = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            wireType = types.basic[type];\n            ref      = \"m\" + util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) {\n            gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j)){\", ref, field.name) // !== undefined && !== null\n        (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)\n            (\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\n            if (wireType === undefined) gen\n            (\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\n            else gen\n            (\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\n            gen\n        (\"}\")\n    (\"}\");\n\n            // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\n\n            // Packed repeated\n            if (field.packed && types.packed[type] !== undefined) { gen\n\n        (\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)\n        (\"for(var i=0;i<%s.length;++i)\", ref)\n            (\"w.%s(%s[i])\", type, ref)\n        (\"w.ldelim()\");\n\n            // Non-packed\n            } else { gen\n\n        (\"for(var i=0;i<%s.length;++i)\", ref);\n                if (wireType === undefined)\n            genTypePartial(gen, field, index, ref + \"[i]\");\n                else gen\n            (\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n            } gen\n    (\"}\");\n\n        // Non-repeated\n        } else {\n            if (field.optional) gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j))\", ref, field.name); // !== undefined && !== null\n\n            if (wireType === undefined)\n        genTypePartial(gen, field, index, ref);\n            else gen\n        (\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n        }\n    }\n\n    return gen\n    (\"return w\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n","\"use strict\";\nmodule.exports = Type;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\n\nvar Enum      = require(\"./enum\"),\n    OneOf     = require(\"./oneof\"),\n    Field     = require(\"./field\"),\n    MapField  = require(\"./mapfield\"),\n    Service   = require(\"./service\"),\n    Message   = require(\"./message\"),\n    Reader    = require(\"./reader\"),\n    Writer    = require(\"./writer\"),\n    util      = require(\"./util\"),\n    encoder   = require(\"./encoder\"),\n    decoder   = require(\"./decoder\"),\n    verifier  = require(\"./verifier\"),\n    converter = require(\"./converter\"),\n    wrappers  = require(\"./wrappers\");\n\n/**\n * Constructs a new reflected message type instance.\n * @classdesc Reflected message type.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Message name\n * @param {Object.<string,*>} [options] Declared options\n */\nfunction Type(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Message fields.\n     * @type {Object.<string,Field>}\n     */\n    this.fields = {};  // toJSON, marker\n\n    /**\n     * Oneofs declared within this namespace, if any.\n     * @type {Object.<string,OneOf>}\n     */\n    this.oneofs = undefined; // toJSON\n\n    /**\n     * Extension ranges, if any.\n     * @type {number[][]}\n     */\n    this.extensions = undefined; // toJSON\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    /*?\n     * Whether this type is a legacy group.\n     * @type {boolean|undefined}\n     */\n    this.group = undefined; // toJSON\n\n    /**\n     * Cached fields by id.\n     * @type {Object.<number,Field>|null}\n     * @private\n     */\n    this._fieldsById = null;\n\n    /**\n     * Cached fields as an array.\n     * @type {Field[]|null}\n     * @private\n     */\n    this._fieldsArray = null;\n\n    /**\n     * Cached oneofs as an array.\n     * @type {OneOf[]|null}\n     * @private\n     */\n    this._oneofsArray = null;\n\n    /**\n     * Cached constructor.\n     * @type {Constructor<{}>}\n     * @private\n     */\n    this._ctor = null;\n}\n\nObject.defineProperties(Type.prototype, {\n\n    /**\n     * Message fields by id.\n     * @name Type#fieldsById\n     * @type {Object.<number,Field>}\n     * @readonly\n     */\n    fieldsById: {\n        get: function() {\n\n            /* istanbul ignore if */\n            if (this._fieldsById)\n                return this._fieldsById;\n\n            this._fieldsById = {};\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\n                var field = this.fields[names[i]],\n                    id = field.id;\n\n                /* istanbul ignore if */\n                if (this._fieldsById[id])\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\n\n                this._fieldsById[id] = field;\n            }\n            return this._fieldsById;\n        }\n    },\n\n    /**\n     * Fields of this message as an array for iteration.\n     * @name Type#fieldsArray\n     * @type {Field[]}\n     * @readonly\n     */\n    fieldsArray: {\n        get: function() {\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\n        }\n    },\n\n    /**\n     * Oneofs of this message as an array for iteration.\n     * @name Type#oneofsArray\n     * @type {OneOf[]}\n     * @readonly\n     */\n    oneofsArray: {\n        get: function() {\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\n        }\n    },\n\n    /**\n     * The registered constructor, if any registered, otherwise a generic constructor.\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\n     * @name Type#ctor\n     * @type {Constructor<{}>}\n     */\n    ctor: {\n        get: function() {\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\n        },\n        set: function(ctor) {\n\n            // Ensure proper prototype\n            var prototype = ctor.prototype;\n            if (!(prototype instanceof Message)) {\n                (ctor.prototype = new Message()).constructor = ctor;\n                util.merge(ctor.prototype, prototype);\n            }\n\n            // Classes and messages reference their reflected type\n            ctor.$type = ctor.prototype.$type = this;\n\n            // Mix in static methods\n            util.merge(ctor, Message, true);\n\n            this._ctor = ctor;\n\n            // Messages have non-enumerable default values on their prototype\n            var i = 0;\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\n                this._fieldsArray[i].resolve(); // ensures a proper value\n\n            // Messages have non-enumerable getters and setters for each virtual oneof field\n            var ctorProperties = {};\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\n                };\n            if (i)\n                Object.defineProperties(ctor.prototype, ctorProperties);\n        }\n    }\n});\n\n/**\n * Generates a constructor function for the specified type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nType.generateConstructor = function generateConstructor(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"p\"], mtype.name);\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\n        if ((field = mtype._fieldsArray[i]).map) gen\n            (\"this%s={}\", util.safeProp(field.name));\n        else if (field.repeated) gen\n            (\"this%s=[]\", util.safeProp(field.name));\n    return gen\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\n        (\"this[ks[i]]=p[ks[i]]\");\n    /* eslint-enable no-unexpected-multiline */\n};\n\nfunction clearCache(type) {\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\n    delete type.encode;\n    delete type.decode;\n    delete type.verify;\n    return type;\n}\n\n/**\n * Message type descriptor.\n * @interface IType\n * @extends INamespace\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\n * @property {Object.<string,IField>} fields Field descriptors\n * @property {number[][]} [extensions] Extension ranges\n * @property {number[][]} [reserved] Reserved ranges\n * @property {boolean} [group=false] Whether a legacy group or not\n */\n\n/**\n * Creates a message type from a message type descriptor.\n * @param {string} name Message name\n * @param {IType} json Message type descriptor\n * @returns {Type} Created message type\n */\nType.fromJSON = function fromJSON(name, json) {\n    var type = new Type(name, json.options);\n    type.extensions = json.extensions;\n    type.reserved = json.reserved;\n    var names = Object.keys(json.fields),\n        i = 0;\n    for (; i < names.length; ++i)\n        type.add(\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\n            ? MapField.fromJSON\n            : Field.fromJSON )(names[i], json.fields[names[i]])\n        );\n    if (json.oneofs)\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\n    if (json.nested)\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\n            var nested = json.nested[names[i]];\n            type.add( // most to least likely\n                ( nested.id !== undefined\n                ? Field.fromJSON\n                : nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    if (json.extensions && json.extensions.length)\n        type.extensions = json.extensions;\n    if (json.reserved && json.reserved.length)\n        type.reserved = json.reserved;\n    if (json.group)\n        type.group = true;\n    if (json.comment)\n        type.comment = json.comment;\n    return type;\n};\n\n/**\n * Converts this message type to a message type descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IType} Message type descriptor\n */\nType.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"    , inherited && inherited.options || undefined,\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"group\"      , this.group || undefined,\n        \"nested\"     , inherited && inherited.nested || undefined,\n        \"comment\"    , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nType.prototype.resolveAll = function resolveAll() {\n    var fields = this.fieldsArray, i = 0;\n    while (i < fields.length)\n        fields[i++].resolve();\n    var oneofs = this.oneofsArray; i = 0;\n    while (i < oneofs.length)\n        oneofs[i++].resolve();\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n/**\n * @override\n */\nType.prototype.get = function get(name) {\n    return this.fields[name]\n        || this.oneofs && this.oneofs[name]\n        || this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Adds a nested object to this type.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\n */\nType.prototype.add = function add(object) {\n\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Field && object.extend === undefined) {\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\n        // The root object takes care of adding distinct sister-fields to the respective extended\n        // type instead.\n\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\n        if (this.isReservedId(object.id))\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\n        if (this.isReservedName(object.name))\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\n\n        if (object.parent)\n            object.parent.remove(object);\n        this.fields[object.name] = object;\n        object.message = this;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n        if (!this.oneofs)\n            this.oneofs = {};\n        this.oneofs[object.name] = object;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * Removes a nested object from this type.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this type\n */\nType.prototype.remove = function remove(object) {\n    if (object instanceof Field && object.extend === undefined) {\n        // See Type#add for the reason why extension fields are excluded here.\n\n        /* istanbul ignore if */\n        if (!this.fields || this.fields[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.fields[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n\n        /* istanbul ignore if */\n        if (!this.oneofs || this.oneofs[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.oneofs[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<{}>} Message instance\n */\nType.prototype.create = function create(properties) {\n    return new this.ctor(properties);\n};\n\n/**\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\n * @returns {Type} `this`\n */\nType.prototype.setup = function setup() {\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\n    // multiple times (V8, soft-deopt prototype-check).\n\n    var fullName = this.fullName,\n        types    = [];\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\n        types.push(this._fieldsArray[i].resolve().resolvedType);\n\n    // Replace setup methods with type-specific generated functions\n    this.encode = encoder(this)({\n        Writer : Writer,\n        types  : types,\n        util   : util\n    });\n    this.decode = decoder(this)({\n        Reader : Reader,\n        types  : types,\n        util   : util\n    });\n    this.verify = verifier(this)({\n        types : types,\n        util  : util\n    });\n    this.fromObject = converter.fromObject(this)({\n        types : types,\n        util  : util\n    });\n    this.toObject = converter.toObject(this)({\n        types : types,\n        util  : util\n    });\n\n    // Inject custom wrappers for common types\n    var wrapper = wrappers[fullName];\n    if (wrapper) {\n        var originalThis = Object.create(this);\n        // if (wrapper.fromObject) {\n            originalThis.fromObject = this.fromObject;\n            this.fromObject = wrapper.fromObject.bind(originalThis);\n        // }\n        // if (wrapper.toObject) {\n            originalThis.toObject = this.toObject;\n            this.toObject = wrapper.toObject.bind(originalThis);\n        // }\n    }\n\n    return this;\n};\n\n/**\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encode = function encode_setup(message, writer) {\n    return this.setup().encode(message, writer); // overrides this method\n};\n\n/**\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\n};\n\n/**\n * Decodes a message of this type.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @param {number} [length] Length of the message, if known beforehand\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError<{}>} If required fields are missing\n */\nType.prototype.decode = function decode_setup(reader, length) {\n    return this.setup().decode(reader, length); // overrides this method\n};\n\n/**\n * Decodes a message of this type preceeded by its byte length as a varint.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError} If required fields are missing\n */\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof Reader))\n        reader = Reader.create(reader);\n    return this.decode(reader, reader.uint32());\n};\n\n/**\n * Verifies that field values are valid and that required fields are present.\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\n */\nType.prototype.verify = function verify_setup(message) {\n    return this.setup().verify(message); // overrides this method\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object to convert\n * @returns {Message<{}>} Message instance\n */\nType.prototype.fromObject = function fromObject(object) {\n    return this.setup().fromObject(object);\n};\n\n/**\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\n * @interface IConversionOptions\n * @property {Function} [longs] Long conversion type.\n * Valid values are `String` and `Number` (the global types).\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\n * @property {Function} [enums] Enum value conversion type.\n * Only valid value is `String` (the global type).\n * Defaults to copy the present value, which is the numeric id.\n * @property {Function} [bytes] Bytes value conversion type.\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\n */\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n */\nType.prototype.toObject = function toObject(message, options) {\n    return this.setup().toObject(message, options);\n};\n\n/**\n * Decorator function as returned by {@link Type.d} (TypeScript).\n * @typedef TypeDecorator\n * @type {function}\n * @param {Constructor<T>} target Target constructor\n * @returns {undefined}\n * @template T extends Message<T>\n */\n\n/**\n * Type decorator (TypeScript).\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {TypeDecorator<T>} Decorator function\n * @template T extends Message<T>\n */\nType.d = function decorateType(typeName) {\n    return function typeDecorator(target) {\n        util.decorateType(target, typeName);\n    };\n};\n","\"use strict\";\nmodule.exports = MapField;\n\n// extends Field\nvar Field = require(\"./field\");\n((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";\n\nvar types   = require(\"./types\"),\n    util    = require(\"./util\");\n\n/**\n * Constructs a new map field instance.\n * @classdesc Reflected map field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} keyType Key type\n * @param {string} type Value type\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction MapField(name, id, keyType, type, options, comment) {\n    Field.call(this, name, id, type, undefined, undefined, options, comment);\n\n    /* istanbul ignore if */\n    if (!util.isString(keyType))\n        throw TypeError(\"keyType must be a string\");\n\n    /**\n     * Key type.\n     * @type {string}\n     */\n    this.keyType = keyType; // toJSON, marker\n\n    /**\n     * Resolved key type if not a basic type.\n     * @type {ReflectionObject|null}\n     */\n    this.resolvedKeyType = null;\n\n    // Overrides Field#map\n    this.map = true;\n}\n\n/**\n * Map field descriptor.\n * @interface IMapField\n * @extends {IField}\n * @property {string} keyType Key type\n */\n\n/**\n * Extension map field descriptor.\n * @interface IExtensionMapField\n * @extends IMapField\n * @property {string} extend Extended type\n */\n\n/**\n * Constructs a map field from a map field descriptor.\n * @param {string} name Field name\n * @param {IMapField} json Map field descriptor\n * @returns {MapField} Created map field\n * @throws {TypeError} If arguments are invalid\n */\nMapField.fromJSON = function fromJSON(name, json) {\n    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);\n};\n\n/**\n * Converts this map field to a map field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMapField} Map field descriptor\n */\nMapField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"keyType\" , this.keyType,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nMapField.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n\n    // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"\n    if (types.mapKey[this.keyType] === undefined)\n        throw Error(\"invalid key type: \" + this.keyType);\n\n    return Field.prototype.resolve.call(this);\n};\n\n/**\n * Map field decorator (TypeScript).\n * @name MapField.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"} fieldKeyType Field key type\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"|\"bytes\"|Object|Constructor<{}>} fieldValueType Field value type\n * @returns {FieldDecorator} Decorator function\n * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }\n */\nMapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {\n\n    // submessage value: decorate the submessage and use its name as the type\n    if (typeof fieldValueType === \"function\")\n        fieldValueType = util.decorateType(fieldValueType).name;\n\n    // enum reference value: create a reflected copy of the enum and keep reuseing it\n    else if (fieldValueType && typeof fieldValueType === \"object\")\n        fieldValueType = util.decorateEnum(fieldValueType).name;\n\n    return function mapFieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));\n    };\n};\n","\"use strict\";\nmodule.exports = Service;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";\n\nvar Method = require(\"./method\"),\n    util   = require(\"./util\"),\n    rpc    = require(\"./rpc\");\n\n/**\n * Constructs a new service instance.\n * @classdesc Reflected service.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Service name\n * @param {Object.<string,*>} [options] Service options\n * @throws {TypeError} If arguments are invalid\n */\nfunction Service(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Service methods.\n     * @type {Object.<string,Method>}\n     */\n    this.methods = {}; // toJSON, marker\n\n    /**\n     * Cached methods as an array.\n     * @type {Method[]|null}\n     * @private\n     */\n    this._methodsArray = null;\n}\n\n/**\n * Service descriptor.\n * @interface IService\n * @extends INamespace\n * @property {Object.<string,IMethod>} methods Method descriptors\n */\n\n/**\n * Constructs a service from a service descriptor.\n * @param {string} name Service name\n * @param {IService} json Service descriptor\n * @returns {Service} Created service\n * @throws {TypeError} If arguments are invalid\n */\nService.fromJSON = function fromJSON(name, json) {\n    var service = new Service(name, json.options);\n    /* istanbul ignore else */\n    if (json.methods)\n        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)\n            service.add(Method.fromJSON(names[i], json.methods[names[i]]));\n    if (json.nested)\n        service.addJSON(json.nested);\n    service.comment = json.comment;\n    return service;\n};\n\n/**\n * Converts this service to a service descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IService} Service descriptor\n */\nService.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , inherited && inherited.options || undefined,\n        \"methods\" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},\n        \"nested\"  , inherited && inherited.nested || undefined,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Methods of this service as an array for iteration.\n * @name Service#methodsArray\n * @type {Method[]}\n * @readonly\n */\nObject.defineProperty(Service.prototype, \"methodsArray\", {\n    get: function() {\n        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));\n    }\n});\n\nfunction clearCache(service) {\n    service._methodsArray = null;\n    return service;\n}\n\n/**\n * @override\n */\nService.prototype.get = function get(name) {\n    return this.methods[name]\n        || Namespace.prototype.get.call(this, name);\n};\n\n/**\n * @override\n */\nService.prototype.resolveAll = function resolveAll() {\n    var methods = this.methodsArray;\n    for (var i = 0; i < methods.length; ++i)\n        methods[i].resolve();\n    return Namespace.prototype.resolve.call(this);\n};\n\n/**\n * @override\n */\nService.prototype.add = function add(object) {\n\n    /* istanbul ignore if */\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Method) {\n        this.methods[object.name] = object;\n        object.parent = this;\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * @override\n */\nService.prototype.remove = function remove(object) {\n    if (object instanceof Method) {\n\n        /* istanbul ignore if */\n        if (this.methods[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.methods[object.name];\n        object.parent = null;\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Creates a runtime service using the specified rpc implementation.\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.\n */\nService.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {\n    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);\n    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {\n        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\\w_]/g, \"\");\n        rpcService[methodName] = util.codegen([\"r\",\"c\"], util.isReserved(methodName) ? methodName + \"_\" : methodName)(\"return this.rpcCall(m,q,s,r,c)\")({\n            m: method,\n            q: method.resolvedRequestType.ctor,\n            s: method.resolvedResponseType.ctor\n        });\n    }\n    return rpcService;\n};\n","\"use strict\";\nmodule.exports = Method;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";\n\nvar util = require(\"./util\");\n\n/**\n * Constructs a new service method instance.\n * @classdesc Reflected service method.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Method name\n * @param {string|undefined} type Method type, usually `\"rpc\"`\n * @param {string} requestType Request message type\n * @param {string} responseType Response message type\n * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed\n * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this method\n */\nfunction Method(name, type, requestType, responseType, requestStream, responseStream, options, comment) {\n\n    /* istanbul ignore next */\n    if (util.isObject(requestStream)) {\n        options = requestStream;\n        requestStream = responseStream = undefined;\n    } else if (util.isObject(responseStream)) {\n        options = responseStream;\n        responseStream = undefined;\n    }\n\n    /* istanbul ignore if */\n    if (!(type === undefined || util.isString(type)))\n        throw TypeError(\"type must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(requestType))\n        throw TypeError(\"requestType must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(responseType))\n        throw TypeError(\"responseType must be a string\");\n\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Method type.\n     * @type {string}\n     */\n    this.type = type || \"rpc\"; // toJSON\n\n    /**\n     * Request type.\n     * @type {string}\n     */\n    this.requestType = requestType; // toJSON, marker\n\n    /**\n     * Whether requests are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.requestStream = requestStream ? true : undefined; // toJSON\n\n    /**\n     * Response type.\n     * @type {string}\n     */\n    this.responseType = responseType; // toJSON\n\n    /**\n     * Whether responses are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.responseStream = responseStream ? true : undefined; // toJSON\n\n    /**\n     * Resolved request type.\n     * @type {Type|null}\n     */\n    this.resolvedRequestType = null;\n\n    /**\n     * Resolved response type.\n     * @type {Type|null}\n     */\n    this.resolvedResponseType = null;\n\n    /**\n     * Comment for this method\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Method descriptor.\n * @interface IMethod\n * @property {string} [type=\"rpc\"] Method type\n * @property {string} requestType Request type\n * @property {string} responseType Response type\n * @property {boolean} [requestStream=false] Whether requests are streamed\n * @property {boolean} [responseStream=false] Whether responses are streamed\n * @property {Object.<string,*>} [options] Method options\n */\n\n/**\n * Constructs a method from a method descriptor.\n * @param {string} name Method name\n * @param {IMethod} json Method descriptor\n * @returns {Method} Created method\n * @throws {TypeError} If arguments are invalid\n */\nMethod.fromJSON = function fromJSON(name, json) {\n    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment);\n};\n\n/**\n * Converts this method to a method descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMethod} Method descriptor\n */\nMethod.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"type\"           , this.type !== \"rpc\" && /* istanbul ignore next */ this.type || undefined,\n        \"requestType\"    , this.requestType,\n        \"requestStream\"  , this.requestStream,\n        \"responseType\"   , this.responseType,\n        \"responseStream\" , this.responseStream,\n        \"options\"        , this.options,\n        \"comment\"        , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nMethod.prototype.resolve = function resolve() {\n\n    /* istanbul ignore if */\n    if (this.resolved)\n        return this;\n\n    this.resolvedRequestType = this.parent.lookupType(this.requestType);\n    this.resolvedResponseType = this.parent.lookupType(this.responseType);\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n","\"use strict\";\nmodule.exports = decoder;\n\nvar Enum    = require(\"./enum\"),\n    types   = require(\"./types\"),\n    util    = require(\"./util\");\n\nfunction missing(field) {\n    return \"missing required '\" + field.name + \"'\";\n}\n\n/**\n * Generates a decoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction decoder(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"r\", \"l\"], mtype.name + \"$decode\")\n    (\"if(!(r instanceof Reader))\")\n        (\"r=Reader.create(r)\")\n    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k\" : \"\"))\n    (\"while(r.pos<c){\")\n        (\"var t=r.uint32()\");\n    if (mtype.group) gen\n        (\"if((t&7)===4)\")\n            (\"break\");\n    gen\n        (\"switch(t>>>3){\");\n\n    var i = 0;\n    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            ref   = \"m\" + util.safeProp(field.name); gen\n            (\"case %i:\", field.id);\n\n        // Map fields\n        if (field.map) { gen\n                (\"r.skip().pos++\") // assumes id 1 + key wireType\n                (\"if(%s===util.emptyObject)\", ref)\n                    (\"%s={}\", ref)\n                (\"k=r.%s()\", field.keyType)\n                (\"r.pos++\"); // assumes id 2 + value wireType\n            if (types.long[field.keyType] !== undefined) {\n                if (types.basic[type] === undefined) gen\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=types[%i].decode(r,r.uint32())\", ref, i); // can't be groups\n                else gen\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=r.%s()\", ref, type);\n            } else {\n                if (types.basic[type] === undefined) gen\n                (\"%s[k]=types[%i].decode(r,r.uint32())\", ref, i); // can't be groups\n                else gen\n                (\"%s[k]=r.%s()\", ref, type);\n            }\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n\n                (\"if(!(%s&&%s.length))\", ref, ref)\n                    (\"%s=[]\", ref);\n\n            // Packable (always check for forward and backward compatiblity)\n            if (types.packed[type] !== undefined) gen\n                (\"if((t&7)===2){\")\n                    (\"var c2=r.uint32()+r.pos\")\n                    (\"while(r.pos<c2)\")\n                        (\"%s.push(r.%s())\", ref, type)\n                (\"}else\");\n\n            // Non-packed\n            if (types.basic[type] === undefined) gen(field.resolvedType.group\n                    ? \"%s.push(types[%i].decode(r))\"\n                    : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\n            else gen\n                    (\"%s.push(r.%s())\", ref, type);\n\n        // Non-repeated\n        } else if (types.basic[type] === undefined) gen(field.resolvedType.group\n                ? \"%s=types[%i].decode(r)\"\n                : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\n        else gen\n                (\"%s=r.%s()\", ref, type);\n        gen\n                (\"break\");\n    // Unknown fields\n    } gen\n            (\"default:\")\n                (\"r.skipType(t&7)\")\n                (\"break\")\n\n        (\"}\")\n    (\"}\");\n\n    // Field presence\n    for (i = 0; i < mtype._fieldsArray.length; ++i) {\n        var rfield = mtype._fieldsArray[i];\n        if (rfield.required) gen\n    (\"if(!m.hasOwnProperty(%j))\", rfield.name)\n        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\n    }\n\n    return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline */\n}\n","\"use strict\";\nmodule.exports = verifier;\n\nvar Enum      = require(\"./enum\"),\n    util      = require(\"./util\");\n\nfunction invalid(field, expected) {\n    return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\"+field.keyType+\"}\" : \"\") + \" expected\";\n}\n\n/**\n * Generates a partial value verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyValue(gen, field, fieldIndex, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(%s){\", ref)\n                (\"default:\")\n                    (\"return%j\", invalid(field, \"enum value\"));\n            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen\n                (\"case %i:\", field.resolvedType.values[keys[j]]);\n            gen\n                    (\"break\")\n            (\"}\");\n        } else {\n            gen\n            (\"{\")\n                (\"var e=types[%i].verify(%s);\", fieldIndex, ref)\n                (\"if(e)\")\n                    (\"return%j+e\", field.name + \".\")\n            (\"}\");\n        }\n    } else {\n        switch (field.type) {\n            case \"int32\":\n            case \"uint32\":\n            case \"sint32\":\n            case \"fixed32\":\n            case \"sfixed32\": gen\n                (\"if(!util.isInteger(%s))\", ref)\n                    (\"return%j\", invalid(field, \"integer\"));\n                break;\n            case \"int64\":\n            case \"uint64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)\n                    (\"return%j\", invalid(field, \"integer|Long\"));\n                break;\n            case \"float\":\n            case \"double\": gen\n                (\"if(typeof %s!==\\\"number\\\")\", ref)\n                    (\"return%j\", invalid(field, \"number\"));\n                break;\n            case \"bool\": gen\n                (\"if(typeof %s!==\\\"boolean\\\")\", ref)\n                    (\"return%j\", invalid(field, \"boolean\"));\n                break;\n            case \"string\": gen\n                (\"if(!util.isString(%s))\", ref)\n                    (\"return%j\", invalid(field, \"string\"));\n                break;\n            case \"bytes\": gen\n                (\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)\n                    (\"return%j\", invalid(field, \"buffer\"));\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a partial key verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyKey(gen, field, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    switch (field.keyType) {\n        case \"int32\":\n        case \"uint32\":\n        case \"sint32\":\n        case \"fixed32\":\n        case \"sfixed32\": gen\n            (\"if(!util.key32Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"integer key\"));\n            break;\n        case \"int64\":\n        case \"uint64\":\n        case \"sint64\":\n        case \"fixed64\":\n        case \"sfixed64\": gen\n            (\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not\n                (\"return%j\", invalid(field, \"integer|Long key\"));\n            break;\n        case \"bool\": gen\n            (\"if(!util.key2Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"boolean key\"));\n            break;\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a verifier specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction verifier(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n\n    var gen = util.codegen([\"m\"], mtype.name + \"$verify\")\n    (\"if(typeof m!==\\\"object\\\"||m===null)\")\n        (\"return%j\", \"object expected\");\n    var oneofs = mtype.oneofsArray,\n        seenFirstField = {};\n    if (oneofs.length) gen\n    (\"var p={}\");\n\n    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            ref   = \"m\" + util.safeProp(field.name);\n\n        if (field.optional) gen\n        (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null\n\n        // map fields\n        if (field.map) { gen\n            (\"if(!util.isObject(%s))\", ref)\n                (\"return%j\", invalid(field, \"object\"))\n            (\"var k=Object.keys(%s)\", ref)\n            (\"for(var i=0;i<k.length;++i){\");\n                genVerifyKey(gen, field, \"k[i]\");\n                genVerifyValue(gen, field, i, ref + \"[k[i]]\")\n            (\"}\");\n\n        // repeated fields\n        } else if (field.repeated) { gen\n            (\"if(!Array.isArray(%s))\", ref)\n                (\"return%j\", invalid(field, \"array\"))\n            (\"for(var i=0;i<%s.length;++i){\", ref);\n                genVerifyValue(gen, field, i, ref + \"[i]\")\n            (\"}\");\n\n        // required or present fields\n        } else {\n            if (field.partOf) {\n                var oneofProp = util.safeProp(field.partOf.name);\n                if (seenFirstField[field.partOf.name] === 1) gen\n            (\"if(p%s===1)\", oneofProp)\n                (\"return%j\", field.partOf.name + \": multiple values\");\n                seenFirstField[field.partOf.name] = 1;\n                gen\n            (\"p%s=1\", oneofProp);\n            }\n            genVerifyValue(gen, field, i, ref);\n        }\n        if (field.optional) gen\n        (\"}\");\n    }\n    return gen\n    (\"return null\");\n    /* eslint-enable no-unexpected-multiline */\n}","\"use strict\";\n/**\n * Runtime message from/to plain object converters.\n * @namespace\n */\nvar converter = exports;\n\nvar Enum = require(\"./enum\"),\n    util = require(\"./util\");\n\n/**\n * Generates a partial value fromObject conveter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_fromObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(d%s){\", prop);\n            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\n                if (field.repeated && values[keys[i]] === field.typeDefault) gen\n                (\"default:\");\n                gen\n                (\"case%j:\", keys[i])\n                (\"case %i:\", values[keys[i]])\n                    (\"m%s=%j\", prop, values[keys[i]])\n                    (\"break\");\n            } gen\n            (\"}\");\n        } else gen\n            (\"if(typeof d%s!==\\\"object\\\")\", prop)\n                (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n            (\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n                (\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\n                break;\n            case \"uint32\":\n            case \"fixed32\": gen\n                (\"m%s=d%s>>>0\", prop, prop);\n                break;\n            case \"int32\":\n            case \"sint32\":\n            case \"sfixed32\": gen\n                (\"m%s=d%s|0\", prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(util.Long)\")\n                    (\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)\n                (\"else if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"m%s=parseInt(d%s,10)\", prop, prop)\n                (\"else if(typeof d%s===\\\"number\\\")\", prop)\n                    (\"m%s=d%s\", prop, prop)\n                (\"else if(typeof d%s===\\\"object\\\")\", prop)\n                    (\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");\n                break;\n            case \"bytes\": gen\n                (\"if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)\n                (\"else if(d%s.length)\", prop)\n                    (\"m%s=d%s\", prop, prop);\n                break;\n            case \"string\": gen\n                (\"m%s=String(d%s)\", prop, prop);\n                break;\n            case \"bool\": gen\n                (\"m%s=Boolean(d%s)\", prop, prop);\n                break;\n            /* default: gen\n                (\"m%s=d%s\", prop, prop);\n                break; */\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a plain object to runtime message converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.fromObject = function fromObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray;\n    var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")\n    (\"if(d instanceof this.ctor)\")\n        (\"return d\");\n    if (!fields.length) return gen\n    (\"return new this.ctor\");\n    gen\n    (\"var m=new this.ctor\");\n    for (var i = 0; i < fields.length; ++i) {\n        var field  = fields[i].resolve(),\n            prop   = util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) { gen\n    (\"if(d%s){\", prop)\n        (\"if(typeof d%s!==\\\"object\\\")\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n        (\"m%s={}\", prop)\n        (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")\n        (\"}\")\n    (\"}\");\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(d%s){\", prop)\n        (\"if(!Array.isArray(d%s))\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": array expected\")\n        (\"m%s=[]\", prop)\n        (\"for(var i=0;i<d%s.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")\n        (\"}\")\n    (\"}\");\n\n        // Non-repeated fields\n        } else {\n            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\n    (\"if(d%s!=null){\", prop); // !== undefined && !== null\n        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);\n            if (!(field.resolvedType instanceof Enum)) gen\n    (\"}\");\n        }\n    } return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n\n/**\n * Generates a partial value toObject converter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_toObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) gen\n            (\"d%s=o.enums===String?types[%i].values[m%s]:m%s\", prop, fieldIndex, prop, prop);\n        else gen\n            (\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n            (\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n            (\"if(typeof m%s===\\\"number\\\")\", prop)\n                (\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)\n            (\"else\") // Long-like\n                (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\": \"\", prop);\n                break;\n            case \"bytes\": gen\n            (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\n                break;\n            default: gen\n            (\"d%s=m%s\", prop, prop);\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a runtime message to plain object converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.toObject = function toObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\n    if (!fields.length)\n        return util.codegen()(\"return {}\");\n    var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")\n    (\"if(!o)\")\n        (\"o={}\")\n    (\"var d={}\");\n\n    var repeatedFields = [],\n        mapFields = [],\n        normalFields = [],\n        i = 0;\n    for (; i < fields.length; ++i)\n        if (!fields[i].partOf)\n            ( fields[i].resolve().repeated ? repeatedFields\n            : fields[i].map ? mapFields\n            : normalFields).push(fields[i]);\n\n    if (repeatedFields.length) { gen\n    (\"if(o.arrays||o.defaults){\");\n        for (i = 0; i < repeatedFields.length; ++i) gen\n        (\"d%s=[]\", util.safeProp(repeatedFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (mapFields.length) { gen\n    (\"if(o.objects||o.defaults){\");\n        for (i = 0; i < mapFields.length; ++i) gen\n        (\"d%s={}\", util.safeProp(mapFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (normalFields.length) { gen\n    (\"if(o.defaults){\");\n        for (i = 0; i < normalFields.length; ++i) {\n            var field = normalFields[i],\n                prop  = util.safeProp(field.name);\n            if (field.resolvedType instanceof Enum) gen\n        (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);\n            else if (field.long) gen\n        (\"if(util.Long){\")\n            (\"var n=new util.Long(%i,%i,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)\n            (\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)\n        (\"}else\")\n            (\"d%s=o.longs===String?%j:%i\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());\n            else if (field.bytes) {\n                var arrayDefault = \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\";\n                gen\n        (\"if(o.bytes===String)d%s=%j\", prop, String.fromCharCode.apply(String, field.typeDefault))\n        (\"else{\")\n            (\"d%s=%s\", prop, arrayDefault)\n            (\"if(o.bytes!==Array)d%s=util.newBuffer(d%s)\", prop, prop)\n        (\"}\");\n            } else gen\n        (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\n        } gen\n    (\"}\");\n    }\n    var hasKs2 = false;\n    for (i = 0; i < fields.length; ++i) {\n        var field = fields[i],\n            index = mtype._fieldsArray.indexOf(field),\n            prop  = util.safeProp(field.name);\n        if (field.map) {\n            if (!hasKs2) { hasKs2 = true; gen\n    (\"var ks2\");\n            } gen\n    (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)\n        (\"d%s={}\", prop)\n        (\"for(var j=0;j<ks2.length;++j){\");\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")\n        (\"}\");\n        } else if (field.repeated) { gen\n    (\"if(m%s&&m%s.length){\", prop, prop)\n        (\"d%s=[]\", prop)\n        (\"for(var j=0;j<m%s.length;++j){\", prop);\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")\n        (\"}\");\n        } else { gen\n    (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\n        genValuePartial_toObject(gen, field, /* sorted */ index, prop);\n        if (field.partOf) gen\n        (\"if(o.oneofs)\")\n            (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\n        }\n        gen\n    (\"}\");\n    }\n    return gen\n    (\"return d\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n","\"use strict\";\n\n/**\n * Wrappers for common types.\n * @type {Object.<string,IWrapper>}\n * @const\n */\nvar wrappers = exports;\n\nvar Message = require(\"./message\");\n\n/**\n * From object converter part of an {@link IWrapper}.\n * @typedef WrapperFromObjectConverter\n * @type {function}\n * @param {Object.<string,*>} object Plain object\n * @returns {Message<{}>} Message instance\n * @this Type\n */\n\n/**\n * To object converter part of an {@link IWrapper}.\n * @typedef WrapperToObjectConverter\n * @type {function}\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @this Type\n */\n\n/**\n * Common type wrapper part of {@link wrappers}.\n * @interface IWrapper\n * @property {WrapperFromObjectConverter} [fromObject] From object converter\n * @property {WrapperToObjectConverter} [toObject] To object converter\n */\n\n// Custom wrapper for Any\nwrappers[\".google.protobuf.Any\"] = {\n\n    fromObject: function(object) {\n\n        // unwrap value type if mapped\n        if (object && object[\"@type\"]) {\n            var type = this.lookup(object[\"@type\"]);\n            /* istanbul ignore else */\n            if (type) {\n                // type_url does not accept leading \".\"\n                var type_url = object[\"@type\"].charAt(0) === \".\" ?\n                    object[\"@type\"].substr(1) : object[\"@type\"];\n                // type_url prefix is optional, but path seperator is required\n                return this.create({\n                    type_url: \"/\" + type_url,\n                    value: type.encode(type.fromObject(object)).finish()\n                });\n            }\n        }\n\n        return this.fromObject(object);\n    },\n\n    toObject: function(message, options) {\n\n        // decode value if requested and unmapped\n        if (options && options.json && message.type_url && message.value) {\n            // Only use fully qualified type name after the last '/'\n            var name = message.type_url.substring(message.type_url.lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type)\n                message = type.decode(message.value);\n        }\n\n        // wrap value if unmapped\n        if (!(message instanceof this.ctor) && message instanceof Message) {\n            var object = message.$type.toObject(message, options);\n            object[\"@type\"] = message.$type.fullName;\n            return object;\n        }\n\n        return this.toObject(message, options);\n    }\n};\n","\"use strict\";\nmodule.exports = Root;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\n\nvar Field   = require(\"./field\"),\n    Enum    = require(\"./enum\"),\n    OneOf   = require(\"./oneof\"),\n    util    = require(\"./util\");\n\nvar Type,   // cyclic\n    parse,  // might be excluded\n    common; // \"\n\n/**\n * Constructs a new root namespace instance.\n * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\n * @extends NamespaceBase\n * @constructor\n * @param {Object.<string,*>} [options] Top level options\n */\nfunction Root(options) {\n    Namespace.call(this, \"\", options);\n\n    /**\n     * Deferred extension fields.\n     * @type {Field[]}\n     */\n    this.deferred = [];\n\n    /**\n     * Resolved file names of loaded files.\n     * @type {string[]}\n     */\n    this.files = [];\n}\n\n/**\n * Loads a namespace descriptor into a root namespace.\n * @param {INamespace} json Nameespace descriptor\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted\n * @returns {Root} Root namespace\n */\nRoot.fromJSON = function fromJSON(json, root) {\n    if (!root)\n        root = new Root();\n    if (json.options)\n        root.setOptions(json.options);\n    return root.addJSON(json.nested);\n};\n\n/**\n * Resolves the path of an imported file, relative to the importing origin.\n * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\n * @function\n * @param {string} origin The file name of the importing file\n * @param {string} target The file name being imported\n * @returns {string|null} Resolved path to `target` or `null` to skip the file\n */\nRoot.prototype.resolvePath = util.path.resolve;\n\n// A symbol-like function to safely signal synchronous loading\n/* istanbul ignore next */\nfunction SYNC() {} // eslint-disable-line no-empty-function\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} options Parse options\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.load = function load(filename, options, callback) {\n    if (typeof options === \"function\") {\n        callback = options;\n        options = undefined;\n    }\n    var self = this;\n    if (!callback)\n        return util.asPromise(load, self, filename, options);\n\n    var sync = callback === SYNC; // undocumented\n\n    // Finishes loading by calling the callback (exactly once)\n    function finish(err, root) {\n        /* istanbul ignore if */\n        if (!callback)\n            return;\n        var cb = callback;\n        callback = null;\n        if (sync)\n            throw err;\n        cb(err, root);\n    }\n\n    // Bundled definition existence checking\n    function getBundledFileName(filename) {\n        var idx = filename.lastIndexOf(\"google/protobuf/\");\n        if (idx > -1) {\n            var altname = filename.substring(idx);\n            if (altname in common) return altname;\n        }\n        return null;\n    }\n\n    // Processes a single file\n    function process(filename, source) {\n        try {\n            if (util.isString(source) && source.charAt(0) === \"{\")\n                source = JSON.parse(source);\n            if (!util.isString(source))\n                self.setOptions(source.options).addJSON(source.nested);\n            else {\n                parse.filename = filename;\n                var parsed = parse(source, self, options),\n                    resolved,\n                    i = 0;\n                if (parsed.imports)\n                    for (; i < parsed.imports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.imports[i]) || self.resolvePath(filename, parsed.imports[i]))\n                            fetch(resolved);\n                if (parsed.weakImports)\n                    for (i = 0; i < parsed.weakImports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.weakImports[i]) || self.resolvePath(filename, parsed.weakImports[i]))\n                            fetch(resolved, true);\n            }\n        } catch (err) {\n            finish(err);\n        }\n        if (!sync && !queued)\n            finish(null, self); // only once anyway\n    }\n\n    // Fetches a single file\n    function fetch(filename, weak) {\n\n        // Skip if already loaded / attempted\n        if (self.files.indexOf(filename) > -1)\n            return;\n        self.files.push(filename);\n\n        // Shortcut bundled definitions\n        if (filename in common) {\n            if (sync)\n                process(filename, common[filename]);\n            else {\n                ++queued;\n                setTimeout(function() {\n                    --queued;\n                    process(filename, common[filename]);\n                });\n            }\n            return;\n        }\n\n        // Otherwise fetch from disk or network\n        if (sync) {\n            var source;\n            try {\n                source = util.fs.readFileSync(filename).toString(\"utf8\");\n            } catch (err) {\n                if (!weak)\n                    finish(err);\n                return;\n            }\n            process(filename, source);\n        } else {\n            ++queued;\n            util.fetch(filename, function(err, source) {\n                --queued;\n                /* istanbul ignore if */\n                if (!callback)\n                    return; // terminated meanwhile\n                if (err) {\n                    /* istanbul ignore else */\n                    if (!weak)\n                        finish(err);\n                    else if (!queued) // can't be covered reliably\n                        finish(null, self);\n                    return;\n                }\n                process(filename, source);\n            });\n        }\n    }\n    var queued = 0;\n\n    // Assembling the root namespace doesn't require working type\n    // references anymore, so we can load everything in parallel\n    if (util.isString(filename))\n        filename = [ filename ];\n    for (var i = 0, resolved; i < filename.length; ++i)\n        if (resolved = self.resolvePath(\"\", filename[i]))\n            fetch(resolved);\n\n    if (sync)\n        return self;\n    if (!queued)\n        finish(null, self);\n    return undefined;\n};\n// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Promise<Root>} Promise\n * @variation 3\n */\n// function load(filename:string, [options:IParseOptions]):Promise<Root>\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\n * @function Root#loadSync\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n */\nRoot.prototype.loadSync = function loadSync(filename, options) {\n    if (!util.isNode)\n        throw Error(\"not supported\");\n    return this.load(filename, options, SYNC);\n};\n\n/**\n * @override\n */\nRoot.prototype.resolveAll = function resolveAll() {\n    if (this.deferred.length)\n        throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {\n            return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\n        }).join(\", \"));\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n// only uppercased (and thus conflict-free) children are exposed, see below\nvar exposeRe = /^[A-Z]/;\n\n/**\n * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\n * @param {Root} root Root instance\n * @param {Field} field Declaring extension field witin the declaring type\n * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\n * @inner\n * @ignore\n */\nfunction tryHandleExtension(root, field) {\n    var extendedType = field.parent.lookup(field.extend);\n    if (extendedType) {\n        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\n        sisterField.declaringField = field;\n        field.extensionField = sisterField;\n        extendedType.add(sisterField);\n        return true;\n    }\n    return false;\n}\n\n/**\n * Called when any object is added to this root or its sub-namespaces.\n * @param {ReflectionObject} object Object added\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleAdd = function _handleAdd(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)\n            if (!tryHandleExtension(this, object))\n                this.deferred.push(object);\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object.values; // expose enum values as property of its parent\n\n    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {\n\n        if (object instanceof Type) // Try to handle any deferred extensions\n            for (var i = 0; i < this.deferred.length;)\n                if (tryHandleExtension(this, this.deferred[i]))\n                    this.deferred.splice(i, 1);\n                else\n                    ++i;\n        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace\n            this._handleAdd(object._nestedArray[j]);\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object; // expose namespace as property of its parent\n    }\n\n    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\n    // properties of namespaces just like static code does. This allows using a .d.ts generated for\n    // a static module with reflection-based solutions where the condition is met.\n};\n\n/**\n * Called when any object is removed from this root or its sub-namespaces.\n * @param {ReflectionObject} object Object removed\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleRemove = function _handleRemove(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field */ object.extend !== undefined) {\n            if (/* already handled */ object.extensionField) { // remove its sister field\n                object.extensionField.parent.remove(object.extensionField);\n                object.extensionField = null;\n            } else { // cancel the extension\n                var index = this.deferred.indexOf(object);\n                /* istanbul ignore else */\n                if (index > -1)\n                    this.deferred.splice(index, 1);\n            }\n        }\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose enum values\n\n    } else if (object instanceof Namespace) {\n\n        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace\n            this._handleRemove(object._nestedArray[i]);\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose namespaces\n\n    }\n};\n\n// Sets up cyclic dependencies (called in index-light)\nRoot._configure = function(Type_, parse_, common_) {\n    Type   = Type_;\n    parse  = parse_;\n    common = common_;\n};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","'use strict';\n\n\nvar zlib_deflate = require('./zlib/deflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\n\nvar toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nvar Z_NO_FLUSH      = 0;\nvar Z_FINISH        = 4;\n\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_SYNC_FLUSH    = 2;\n\nvar Z_DEFAULT_COMPRESSION = -1;\n\nvar Z_DEFAULT_STRATEGY    = 0;\n\nvar Z_DEFLATED  = 8;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array|Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you\n * push a chunk with explicit flush (call [[Deflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate(options) {\n  if (!(this instanceof Deflate)) return new Deflate(options);\n\n  this.options = utils.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status = zlib_deflate.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  if (opt.header) {\n    zlib_deflate.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    var dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = zlib_deflate.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK) {\n      throw new Error(msg[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the compression context.\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * array format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var status, _mode;\n\n  if (this.ended) { return false; }\n\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH : Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n    status = zlib_deflate.deflate(strm, _mode);    /* no bad return value */\n\n    if (status !== Z_STREAM_END && status !== Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n    if (strm.avail_out === 0 || (strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH))) {\n      if (this.options.to === 'string') {\n        this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output, strm.next_out)));\n      } else {\n        this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n      }\n    }\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);\n\n  // Finalize on the last chunk.\n  if (_mode === Z_FINISH) {\n    status = zlib_deflate.deflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === Z_SYNC_FLUSH) {\n    this.onEnd(Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate(input, options) {\n  var deflator = new Deflate(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate(input, options);\n}\n\n\nexports.Deflate = Deflate;\nexports.deflate = deflate;\nexports.deflateRaw = deflateRaw;\nexports.gzip = gzip;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils   = require('../utils/common');\nvar trees   = require('./trees');\nvar adler32 = require('./adler32');\nvar crc32   = require('./crc32');\nvar msg     = require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nvar Z_NO_FLUSH      = 0;\nvar Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\nvar Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\n//var Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\n//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\n//var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n\n/* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\nvar Z_DEFAULT_COMPRESSION = -1;\n\n\nvar Z_FILTERED            = 1;\nvar Z_HUFFMAN_ONLY        = 2;\nvar Z_RLE                 = 3;\nvar Z_FIXED               = 4;\nvar Z_DEFAULT_STRATEGY    = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n/*============================================================================*/\n\n\nvar MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_MEM_LEVEL = 8;\n\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nvar D_CODES       = 30;\n/* number of distance codes */\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nvar MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\nvar MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nvar PRESET_DICT = 0x20;\n\nvar INIT_STATE = 42;\nvar EXTRA_STATE = 69;\nvar NAME_STATE = 73;\nvar COMMENT_STATE = 91;\nvar HCRC_STATE = 103;\nvar BUSY_STATE = 113;\nvar FINISH_STATE = 666;\n\nvar BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nvar BS_BLOCK_DONE     = 2; /* block flush performed */\nvar BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nvar BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nvar OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nfunction err(strm, errorCode) {\n  strm.msg = msg[errorCode];\n  return errorCode;\n}\n\nfunction rank(f) {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n}\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nfunction flush_pending(strm) {\n  var s = strm.state;\n\n  //_tr_flush_bits(s);\n  var len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n}\n\n\nfunction flush_block_only(s, last) {\n  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n}\n\n\nfunction put_byte(s, b) {\n  s.pending_buf[s.pending++] = b;\n}\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nfunction putShortMSB(s, b) {\n//  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n}\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nfunction read_buf(strm, buf, start, size) {\n  var len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  utils.arraySet(buf, strm.input, strm.next_in, len, start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n}\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nfunction longest_match(s, cur_match) {\n  var chain_length = s.max_chain_length;      /* max hash chain length */\n  var scan = s.strstart; /* current string */\n  var match;                       /* matched string */\n  var len;                           /* length of current match */\n  var best_len = s.prev_length;              /* best match length so far */\n  var nice_match = s.nice_match;             /* stop if match long enough */\n  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  var _win = s.window; // shortcut\n\n  var wmask = s.w_mask;\n  var prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  var strend = s.strstart + MAX_MATCH;\n  var scan_end1  = _win[scan + best_len - 1];\n  var scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n}\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nfunction fill_window(s) {\n  var _w_size = s.w_size;\n  var p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    var curr = s.strstart + s.lookahead;\n//    var init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n}\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nfunction deflate_stored(s, flush) {\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  var max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    var max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n}\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction deflate_fast(s, flush) {\n  var hash_head;        /* head of the hash chain */\n  var bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction deflate_slow(s, flush) {\n  var hash_head;          /* head of hash chain */\n  var bflush;              /* set if current block must be flushed */\n\n  var max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n}\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nfunction deflate_rle(s, flush) {\n  var bflush;            /* set if current block must be flushed */\n  var prev;              /* byte at distance one to match */\n  var scan, strend;      /* scan goes up to strend for length of run */\n\n  var _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nfunction deflate_huff(s, flush) {\n  var bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nvar configuration_table;\n\nconfiguration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nfunction lm_init(s) {\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n}\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);\n  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new utils.Buf16(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nfunction deflateResetKeep(strm) {\n  var s;\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH;\n  trees._tr_init(s);\n  return Z_OK;\n}\n\n\nfunction deflateReset(strm) {\n  var ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n}\n\n\nfunction deflateSetHeader(strm, head) {\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n  strm.state.gzhead = head;\n  return Z_OK;\n}\n\n\nfunction deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  var wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  var s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new utils.Buf8(s.w_size * 2);\n  s.head = new utils.Buf16(s.hash_size);\n  s.prev = new utils.Buf16(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new utils.Buf8(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n}\n\nfunction deflateInit(strm, level) {\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n}\n\n\nfunction deflate(strm, flush) {\n  var old_flush, s;\n  var beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm; /* just in case */\n  old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n        );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n      var level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        trees._tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        trees._tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n}\n\nfunction deflateEnd(strm) {\n  var status;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n}\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nfunction deflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var s;\n  var str, n;\n  var wrap;\n  var avail;\n  var next;\n  var input;\n  var tmpDict;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n  wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    tmpDict = new utils.Buf8(s.w_size);\n    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  avail = strm.avail_in;\n  next = strm.next_in;\n  input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    str = s.strstart;\n    n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n}\n\n\nexports.deflateInit = deflateInit;\nexports.deflateInit2 = deflateInit2;\nexports.deflateReset = deflateReset;\nexports.deflateResetKeep = deflateResetKeep;\nexports.deflateSetHeader = deflateSetHeader;\nexports.deflate = deflate;\nexports.deflateEnd = deflateEnd;\nexports.deflateSetDictionary = deflateSetDictionary;\nexports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\nvar utils = require('../utils/common');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED               = 4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nvar Z_BINARY              = 0;\nvar Z_TEXT                = 1;\n//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nvar STORED_BLOCK = 0;\nvar STATIC_TREES = 1;\nvar DYN_TREES    = 2;\n/* The three kinds of block type */\n\nvar MIN_MATCH    = 3;\nvar MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES       = 30;\n/* number of distance codes */\n\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK   = 256;\n/* end of block literal code */\n\nvar REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nvar extra_lbits =   /* extra bits for each length code */\n  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\nvar extra_dbits =   /* extra bits for each distance code */\n  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\nvar extra_blbits =  /* extra bits for each bit length code */\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\nvar bl_order =\n  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nvar static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nfunction d_code(dist) {\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short(s, w) {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n}\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s, value, length) {\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n}\n\n\nfunction send_code(s, c, tree) {\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n}\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code, len) {\n  var res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nfunction bi_flush(s) {\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n}\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  var tree            = desc.dyn_tree;\n  var max_code        = desc.max_code;\n  var stree           = desc.stat_desc.static_tree;\n  var has_stree       = desc.stat_desc.has_stree;\n  var extra           = desc.stat_desc.extra_bits;\n  var base            = desc.stat_desc.extra_base;\n  var max_length      = desc.stat_desc.max_length;\n  var h;              /* heap index */\n  var n, m;           /* iterate over the tree elements */\n  var bits;           /* bit length */\n  var xbits;          /* extra bits */\n  var f;              /* frequency */\n  var overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree, max_code, bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  var code = 0;              /* running code value */\n  var bits;                  /* bit index */\n  var n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    var len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n}\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init() {\n  var n;        /* iterates over tree elements */\n  var bits;     /* bit counter */\n  var length;   /* length value */\n  var code;     /* code value */\n  var dist;     /* distance index */\n  var bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n}\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s) {\n  var n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s)\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n}\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s, buf, len, header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n  s.pending += len;\n}\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree, n, m, depth) {\n  var _n2 = n * 2;\n  var _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s, tree, k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  var v = s.heap[k];\n  var j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n}\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s, ltree, dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  var dist;           /* distance of matched string */\n  var lc;             /* match length or unmatched char (if dist == 0) */\n  var lx = 0;         /* running index in l_buf */\n  var code;           /* the code to send */\n  var extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n}\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  var tree     = desc.dyn_tree;\n  var stree    = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var elems    = desc.stat_desc.elems;\n  var n, m;          /* iterate over heap elements */\n  var max_code = -1; /* largest code with non zero frequency */\n  var node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n}\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction send_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s) {\n  var max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n}\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction send_all_trees(s, lcodes, dcodes, blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  var rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s) {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  var black_mask = 0xf3ffc07f;\n  var n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n}\n\n\nvar static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nfunction _tr_init(s)\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n}\n\n\n/* ===========================================================================\n * Send a stored block\n */\nfunction _tr_stored_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n}\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nfunction _tr_align(s) {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n}\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nfunction _tr_flush_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  var max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction _tr_tally(s, dist, lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //var out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\nexports._tr_init  = _tr_init;\nexports._tr_stored_block = _tr_stored_block;\nexports._tr_flush_block  = _tr_flush_block;\nexports._tr_tally = _tr_tally;\nexports._tr_align = _tr_align;\n","'use strict';\n\n\nvar zlib_inflate = require('./zlib/inflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar c            = require('./zlib/constants');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\nvar GZheader     = require('./zlib/gzheader');\n\nvar toString = Object.prototype.toString;\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you\n * push a chunk with explicit flush (call [[Inflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  if (!(this instanceof Inflate)) return new Inflate(options);\n\n  this.options = utils.assign({\n    chunkSize: 16384,\n    windowBits: 0,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status  = zlib_inflate.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== c.Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new GZheader();\n\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = zlib_inflate.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== c.Z_OK) {\n        throw new Error(msg[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the decompression context.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var dictionary = this.options.dictionary;\n  var status, _mode;\n  var next_out_utf8, tail, utf8str;\n\n  // Flag to properly process Z_BUF_ERROR on testing inflate call\n  // when we check that all output data was flushed.\n  var allowBufError = false;\n\n  if (this.ended) { return false; }\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? c.Z_FINISH : c.Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // Only binary strings can be decompressed on practice\n    strm.input = strings.binstring2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH);    /* no bad return value */\n\n    if (status === c.Z_NEED_DICT && dictionary) {\n      status = zlib_inflate.inflateSetDictionary(this.strm, dictionary);\n    }\n\n    if (status === c.Z_BUF_ERROR && allowBufError === true) {\n      status = c.Z_OK;\n      allowBufError = false;\n    }\n\n    if (status !== c.Z_STREAM_END && status !== c.Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === c.Z_STREAM_END || (strm.avail_in === 0 && (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH))) {\n\n        if (this.options.to === 'string') {\n\n          next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          tail = strm.next_out - next_out_utf8;\n          utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) { utils.arraySet(strm.output, strm.output, next_out_utf8, tail, 0); }\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n        }\n      }\n    }\n\n    // When no more input data, we should check that internal inflate buffers\n    // are flushed. The only way to do it when avail_out = 0 - run one more\n    // inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.\n    // Here we set flag to process this error properly.\n    //\n    // NOTE. Deflate does not return error in this case and does not needs such\n    // logic.\n    if (strm.avail_in === 0 && strm.avail_out === 0) {\n      allowBufError = true;\n    }\n\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== c.Z_STREAM_END);\n\n  if (status === c.Z_STREAM_END) {\n    _mode = c.Z_FINISH;\n  }\n\n  // Finalize on the last chunk.\n  if (_mode === c.Z_FINISH) {\n    status = zlib_inflate.inflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === c.Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === c.Z_SYNC_FLUSH) {\n    this.onEnd(c.Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === c.Z_OK) {\n    if (this.options.to === 'string') {\n      // Glue & convert here, until we teach pako to send\n      // utf8 aligned strings to onData\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])\n *   , output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err)\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  var inflator = new Inflate(options);\n\n  inflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) { throw inflator.msg || msg[inflator.err]; }\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nexports.Inflate = Inflate;\nexports.inflate = inflate;\nexports.inflateRaw = inflateRaw;\nexports.ungzip  = inflate;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils         = require('../utils/common');\nvar adler32       = require('./adler32');\nvar crc32         = require('./crc32');\nvar inflate_fast  = require('./inffast');\nvar inflate_table = require('./inftrees');\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\nvar Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\nvar Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nvar    HEAD = 1;       /* i: waiting for magic header */\nvar    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nvar    TIME = 3;       /* i: waiting for modification time (gzip) */\nvar    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nvar    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nvar    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nvar    NAME = 7;       /* i: waiting for end of file name (gzip) */\nvar    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nvar    HCRC = 9;       /* i: waiting for header crc (gzip) */\nvar    DICTID = 10;    /* i: waiting for dictionary check value */\nvar    DICT = 11;      /* waiting for inflateSetDictionary() call */\nvar        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nvar        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nvar        STORED = 14;    /* i: waiting for stored size (length and complement) */\nvar        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nvar        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nvar        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nvar        LENLENS = 18;   /* i: waiting for code length code lengths */\nvar        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nvar            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nvar            LEN = 21;       /* i: waiting for length/lit/eob code */\nvar            LENEXT = 22;    /* i: waiting for length extra bits */\nvar            DIST = 23;      /* i: waiting for distance code */\nvar            DISTEXT = 24;   /* i: waiting for distance extra bits */\nvar            MATCH = 25;     /* o: waiting for output space to copy string */\nvar            LIT = 26;       /* o: waiting for output space to write literal */\nvar    CHECK = 27;     /* i: waiting for 32-bit check value */\nvar    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nvar    DONE = 29;      /* finished check, done -- remain here until reset */\nvar    BAD = 30;       /* got a data error -- remain here until reset */\nvar    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nvar    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_WBITS = MAX_WBITS;\n\n\nfunction zswap32(q) {\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n}\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */\n  this.work = new utils.Buf16(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\nfunction inflateResetKeep(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n}\n\nfunction inflateReset(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n}\n\nfunction inflateReset2(strm, windowBits) {\n  var wrap;\n  var state;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\n\nfunction inflateInit2(strm, windowBits) {\n  var ret;\n  var state;\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n}\n\nfunction inflateInit(strm) {\n  return inflateInit2(strm, DEF_WBITS);\n}\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nvar virgin = true;\n\nvar lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    var sym;\n\n    lenfix = new utils.Buf32(512);\n    distfix = new utils.Buf32(32);\n\n    /* literal/length table */\n    sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm, src, end, copy) {\n  var dist;\n  var state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new utils.Buf8(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    utils.arraySet(state.window, src, end - copy, dist, state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      utils.arraySet(state.window, src, end - copy, copy, 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n}\n\nfunction inflate(strm, flush) {\n  var state;\n  var input, output;          // input/output buffers\n  var next;                   /* next input INDEX */\n  var put;                    /* next output INDEX */\n  var have, left;             /* available input and output */\n  var hold;                   /* bit buffer */\n  var bits;                   /* bits in bit buffer */\n  var _in, _out;              /* save starting available input and output */\n  var copy;                   /* number of stored or match bytes to copy */\n  var from;                   /* where to copy match bytes from */\n  var from_source;\n  var here = 0;               /* current decoding table entry */\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  var len;                    /* length to copy for repeats, bits to drop */\n  var ret;                    /* return code */\n  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */\n  var opts;\n\n  var n; // temporary var for NEED_BITS\n\n  var order = /* permutation of code lengths */\n    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n        state.dmax = 1 << len;\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Array(state.head.extra_len);\n              }\n              utils.arraySet(\n                state.head.extra,\n                input,\n                next,\n                // extra field is limited to 65536 bytes\n                // - no need for additional size check\n                copy,\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          utils.arraySet(output, input, next, copy, put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n}\n\nfunction inflateEnd(strm) {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  var state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n}\n\nfunction inflateGetHeader(strm, head) {\n  var state;\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\n\nfunction inflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var state;\n  var dictid;\n  var ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n}\n\nexports.inflateReset = inflateReset;\nexports.inflateReset2 = inflateReset2;\nexports.inflateResetKeep = inflateResetKeep;\nexports.inflateInit = inflateInit;\nexports.inflateInit2 = inflateInit2;\nexports.inflate = inflate;\nexports.inflateEnd = inflateEnd;\nexports.inflateGetHeader = inflateGetHeader;\nexports.inflateSetDictionary = inflateSetDictionary;\nexports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nvar BAD = 30;       /* got a data error -- remain here until reset */\nvar TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  var state;\n  var _in;                    /* local strm.input */\n  var last;                   /* have enough input while in < last */\n  var _out;                   /* local strm.output */\n  var beg;                    /* inflate()'s initial strm.output */\n  var end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  var dmax;                   /* maximum distance from zlib header */\n//#endif\n  var wsize;                  /* window size or zero if not using window */\n  var whave;                  /* valid bytes in the window */\n  var wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  var s_window;               /* allocated sliding window, if wsize != 0 */\n  var hold;                   /* local strm.hold */\n  var bits;                   /* local strm.bits */\n  var lcode;                  /* local strm.lencode */\n  var dcode;                  /* local strm.distcode */\n  var lmask;                  /* mask for first level of length codes */\n  var dmask;                  /* mask for first level of distance codes */\n  var here;                   /* retrieved table entry */\n  var op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  var len;                    /* match length, unused bytes */\n  var dist;                   /* match distance */\n  var from;                   /* where to copy match from */\n  var from_source;\n\n\n  var input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils = require('../utils/common');\n\nvar MAXBITS = 15;\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\nvar lbase = [ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n];\n\nvar lext = [ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n];\n\nvar dbase = [ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n];\n\nvar dext = [ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n];\n\nmodule.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)\n{\n  var bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  var len = 0;               /* a code's length in bits */\n  var sym = 0;               /* index of code symbols */\n  var min = 0, max = 0;          /* minimum and maximum code lengths */\n  var root = 0;              /* number of index bits for root table */\n  var curr = 0;              /* number of index bits for current table */\n  var drop = 0;              /* code bits to drop for sub-table */\n  var left = 0;                   /* number of prefix codes available */\n  var used = 0;              /* code entries in table used */\n  var huff = 0;              /* Huffman code */\n  var incr;              /* for incrementing code, index */\n  var fill;              /* index for replicating entries */\n  var low;               /* low bits for current root entry */\n  var mask;              /* mask for low root bits */\n  var next;             /* next available space in table */\n  var base = null;     /* base value table to use */\n  var base_index = 0;\n//  var shoextra;    /* extra bits table to use */\n  var end;                    /* use base and extra for symbol > end */\n  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  var extra = null;\n  var extra_index = 0;\n\n  var here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nmodule.exports = GZheader;\n","\"use strict\";\nvar protobuf = module.exports = require(\"./index-minimal\");\n\nprotobuf.build = \"light\";\n\n/**\n * A node-style callback as used by {@link load} and {@link Root#load}.\n * @typedef LoadCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Root} [root] Root, if there hasn't been an error\n * @returns {undefined}\n */\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} root Root namespace, defaults to create a new one if omitted.\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n */\nfunction load(filename, root, callback) {\n    if (typeof root === \"function\") {\n        callback = root;\n        root = new protobuf.Root();\n    } else if (!root)\n        root = new protobuf.Root();\n    return root.load(filename, callback);\n}\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Promise<Root>} Promise\n * @see {@link Root#load}\n * @variation 3\n */\n// function load(filename:string, [root:Root]):Promise<Root>\n\nprotobuf.load = load;\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n * @see {@link Root#loadSync}\n */\nfunction loadSync(filename, root) {\n    if (!root)\n        root = new protobuf.Root();\n    return root.loadSync(filename);\n}\n\nprotobuf.loadSync = loadSync;\n\n// Serialization\nprotobuf.encoder          = require(\"./encoder\");\nprotobuf.decoder          = require(\"./decoder\");\nprotobuf.verifier         = require(\"./verifier\");\nprotobuf.converter        = require(\"./converter\");\n\n// Reflection\nprotobuf.ReflectionObject = require(\"./object\");\nprotobuf.Namespace        = require(\"./namespace\");\nprotobuf.Root             = require(\"./root\");\nprotobuf.Enum             = require(\"./enum\");\nprotobuf.Type             = require(\"./type\");\nprotobuf.Field            = require(\"./field\");\nprotobuf.OneOf            = require(\"./oneof\");\nprotobuf.MapField         = require(\"./mapfield\");\nprotobuf.Service          = require(\"./service\");\nprotobuf.Method           = require(\"./method\");\n\n// Runtime\nprotobuf.Message          = require(\"./message\");\nprotobuf.wrappers         = require(\"./wrappers\");\n\n// Utility\nprotobuf.types            = require(\"./types\");\nprotobuf.util             = require(\"./util\");\n\n// Set up possibly cyclic reflection dependencies\nprotobuf.ReflectionObject._configure(protobuf.Root);\nprotobuf.Namespace._configure(protobuf.Type, protobuf.Service, protobuf.Enum);\nprotobuf.Root._configure(protobuf.Type);\nprotobuf.Field._configure(protobuf.Type);\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\r\nmodule.exports = codegen;\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @param {string[]} functionParams Function parameter names\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n */\r\nfunction codegen(functionParams, functionName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (typeof functionParams === \"string\") {\r\n        functionName = functionParams;\r\n        functionParams = undefined;\r\n    }\r\n\r\n    var body = [];\r\n\r\n    /**\r\n     * Appends code to the function's body or finishes generation.\r\n     * @typedef Codegen\r\n     * @type {function}\r\n     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\r\n     * @param {...*} [formatParams] Format parameters\r\n     * @returns {Codegen|Function} Itself or the generated function if finished\r\n     * @throws {Error} If format parameter counts do not match\r\n     */\r\n\r\n    function Codegen(formatStringOrScope) {\r\n        // note that explicit array handling below makes this ~50% faster\r\n\r\n        // finish the function\r\n        if (typeof formatStringOrScope !== \"string\") {\r\n            var source = toString();\r\n            if (codegen.verbose)\r\n                console.log(\"codegen: \" + source); // eslint-disable-line no-console\r\n            source = \"return \" + source;\r\n            if (formatStringOrScope) {\r\n                var scopeKeys   = Object.keys(formatStringOrScope),\r\n                    scopeParams = new Array(scopeKeys.length + 1),\r\n                    scopeValues = new Array(scopeKeys.length),\r\n                    scopeOffset = 0;\r\n                while (scopeOffset < scopeKeys.length) {\r\n                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];\r\n                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\r\n                }\r\n                scopeParams[scopeOffset] = source;\r\n                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\r\n            }\r\n            return Function(source)(); // eslint-disable-line no-new-func\r\n        }\r\n\r\n        // otherwise append to body\r\n        var formatParams = new Array(arguments.length - 1),\r\n            formatOffset = 0;\r\n        while (formatOffset < formatParams.length)\r\n            formatParams[formatOffset] = arguments[++formatOffset];\r\n        formatOffset = 0;\r\n        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\r\n            var value = formatParams[formatOffset++];\r\n            switch ($1) {\r\n                case \"d\": case \"f\": return String(Number(value));\r\n                case \"i\": return String(Math.floor(value));\r\n                case \"j\": return JSON.stringify(value);\r\n                case \"s\": return String(value);\r\n            }\r\n            return \"%\";\r\n        });\r\n        if (formatOffset !== formatParams.length)\r\n            throw Error(\"parameter count mismatch\");\r\n        body.push(formatStringOrScope);\r\n        return Codegen;\r\n    }\r\n\r\n    function toString(functionNameOverride) {\r\n        return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\r\n    }\r\n\r\n    Codegen.toString = toString;\r\n    return Codegen;\r\n}\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @function codegen\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * When set to `true`, codegen will log generated code to console. Useful for debugging.\r\n * @name util.codegen.verbose\r\n * @type {boolean}\r\n */\r\ncodegen.verbose = false;\r\n","\"use strict\";\r\nmodule.exports = fetch;\r\n\r\nvar asPromise = require(\"@protobufjs/aspromise\"),\r\n    inquire   = require(\"@protobufjs/inquire\");\r\n\r\nvar fs = inquire(\"fs\");\r\n\r\n/**\r\n * Node-style callback as used by {@link util.fetch}.\r\n * @typedef FetchCallback\r\n * @type {function}\r\n * @param {?Error} error Error, if any, otherwise `null`\r\n * @param {string} [contents] File contents, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Options as used by {@link util.fetch}.\r\n * @typedef FetchOptions\r\n * @type {Object}\r\n * @property {boolean} [binary=false] Whether expecting a binary response\r\n * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @memberof util\r\n * @param {string} filename File path or url\r\n * @param {FetchOptions} options Fetch options\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nfunction fetch(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = {};\r\n    } else if (!options)\r\n        options = {};\r\n\r\n    if (!callback)\r\n        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this\r\n\r\n    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.\r\n    if (!options.xhr && fs && fs.readFile)\r\n        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {\r\n            return err && typeof XMLHttpRequest !== \"undefined\"\r\n                ? fetch.xhr(filename, options, callback)\r\n                : err\r\n                ? callback(err)\r\n                : callback(null, options.binary ? contents : contents.toString(\"utf8\"));\r\n        });\r\n\r\n    // use the XHR version otherwise.\r\n    return fetch.xhr(filename, options, callback);\r\n}\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchOptions} [options] Fetch options\r\n * @returns {Promise<string|Uint8Array>} Promise\r\n * @variation 3\r\n */\r\n\r\n/**/\r\nfetch.xhr = function fetch_xhr(filename, options, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {\r\n\r\n        if (xhr.readyState !== 4)\r\n            return undefined;\r\n\r\n        // local cors security errors return status 0 / empty string, too. afaik this cannot be\r\n        // reliably distinguished from an actually empty file for security reasons. feel free\r\n        // to send a pull request if you are aware of a solution.\r\n        if (xhr.status !== 0 && xhr.status !== 200)\r\n            return callback(Error(\"status \" + xhr.status));\r\n\r\n        // if binary data is expected, make sure that some sort of array is returned, even if\r\n        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.\r\n        if (options.binary) {\r\n            var buffer = xhr.response;\r\n            if (!buffer) {\r\n                buffer = [];\r\n                for (var i = 0; i < xhr.responseText.length; ++i)\r\n                    buffer.push(xhr.responseText.charCodeAt(i) & 255);\r\n            }\r\n            return callback(null, typeof Uint8Array !== \"undefined\" ? new Uint8Array(buffer) : buffer);\r\n        }\r\n        return callback(null, xhr.responseText);\r\n    };\r\n\r\n    if (options.binary) {\r\n        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers\r\n        if (\"overrideMimeType\" in xhr)\r\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        xhr.responseType = \"arraybuffer\";\r\n    }\r\n\r\n    xhr.open(\"GET\", filename);\r\n    xhr.send();\r\n};\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal path module to resolve Unix, Windows and URL paths alike.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar path = exports;\r\n\r\nvar isAbsolute =\r\n/**\r\n * Tests if the specified path is absolute.\r\n * @param {string} path Path to test\r\n * @returns {boolean} `true` if path is absolute\r\n */\r\npath.isAbsolute = function isAbsolute(path) {\r\n    return /^(?:\\/|\\w+:)/.test(path);\r\n};\r\n\r\nvar normalize =\r\n/**\r\n * Normalizes the specified path.\r\n * @param {string} path Path to normalize\r\n * @returns {string} Normalized path\r\n */\r\npath.normalize = function normalize(path) {\r\n    path = path.replace(/\\\\/g, \"/\")\r\n               .replace(/\\/{2,}/g, \"/\");\r\n    var parts    = path.split(\"/\"),\r\n        absolute = isAbsolute(path),\r\n        prefix   = \"\";\r\n    if (absolute)\r\n        prefix = parts.shift() + \"/\";\r\n    for (var i = 0; i < parts.length;) {\r\n        if (parts[i] === \"..\") {\r\n            if (i > 0 && parts[i - 1] !== \"..\")\r\n                parts.splice(--i, 2);\r\n            else if (absolute)\r\n                parts.splice(i, 1);\r\n            else\r\n                ++i;\r\n        } else if (parts[i] === \".\")\r\n            parts.splice(i, 1);\r\n        else\r\n            ++i;\r\n    }\r\n    return prefix + parts.join(\"/\");\r\n};\r\n\r\n/**\r\n * Resolves the specified include path against the specified origin path.\r\n * @param {string} originPath Path to the origin file\r\n * @param {string} includePath Include path relative to origin path\r\n * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized\r\n * @returns {string} Path to the include file\r\n */\r\npath.resolve = function resolve(originPath, includePath, alreadyNormalized) {\r\n    if (!alreadyNormalized)\r\n        includePath = normalize(includePath);\r\n    if (isAbsolute(includePath))\r\n        return includePath;\r\n    if (!alreadyNormalized)\r\n        originPath = normalize(originPath);\r\n    return (originPath = originPath.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? normalize(originPath + \"/\" + includePath) : includePath;\r\n};\r\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"./setPrototypeOf\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType,\n} from \"./protocol\";\nexport { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\n\nconst throwMarker = Symbol(\"Comlink.thrown\");\n\n/**\n * Interface of values that were marked to be proxied with `comlink.proxy()`.\n * Can also be implemented by classes.\n */\nexport interface ProxyMarked {\n  [proxyMarker]: true;\n}\n\n/**\n * Takes a type and wraps it in a Promise, if it not already is one.\n * This is to avoid `Promise<Promise<T>>`.\n *\n * This is the inverse of `Unpromisify<T>`.\n */\ntype Promisify<T> = T extends Promise<unknown> ? T : Promise<T>;\n/**\n * Takes a type that may be Promise and unwraps the Promise type.\n * If `P` is not a Promise, it returns `P`.\n *\n * This is the inverse of `Promisify<T>`.\n */\ntype Unpromisify<P> = P extends Promise<infer T> ? T : P;\n\n/**\n * Takes the raw type of a remote property and returns the type that is visible to the local thread on the proxy.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions.\n * See https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype RemoteProperty<T> =\n  // If the value is a method, comlink will proxy it automatically.\n  // Objects are only proxied if they are marked to be proxied.\n  // Otherwise, the property is converted to a Promise that resolves the cloned value.\n  T extends Function | ProxyMarked ? Remote<T> : Promisify<T>;\n\n/**\n * Takes the raw type of a property as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This is the inverse of `RemoteProperty<T>`.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype LocalProperty<T> = T extends Function | ProxyMarked\n  ? Local<T>\n  : Unpromisify<T>;\n\n/**\n * Proxies `T` if it is a `ProxyMarked`, clones it otherwise (as handled by structured cloning and transfer handlers).\n */\nexport type ProxyOrClone<T> = T extends ProxyMarked ? Remote<T> : T;\n/**\n * Inverse of `ProxyOrClone<T>`.\n */\nexport type UnproxyOrClone<T> = T extends RemoteObject<ProxyMarked>\n  ? Local<T>\n  : T;\n\n/**\n * Takes the raw type of a remote object in the other thread and returns the type as it is visible to the local thread\n * when proxied with `Comlink.proxy()`.\n *\n * This does not handle call signatures, which is handled by the more general `Remote<T>` type.\n *\n * @template T The raw type of a remote object as seen in the other thread.\n */\nexport type RemoteObject<T> = { [P in keyof T]: RemoteProperty<T[P]> };\n/**\n * Takes the type of an object as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This does not handle call signatures, which is handled by the more general `Local<T>` type.\n *\n * This is the inverse of `RemoteObject<T>`.\n *\n * @template T The type of a proxied object.\n */\nexport type LocalObject<T> = { [P in keyof T]: LocalProperty<T[P]> };\n\n/**\n * Additional special comlink methods available on each proxy returned by `Comlink.wrap()`.\n */\nexport interface ProxyMethods {\n  [createEndpoint]: () => Promise<MessagePort>;\n  [releaseProxy]: () => void;\n}\n\n/**\n * Takes the raw type of a remote object, function or class in the other thread and returns the type as it is visible to\n * the local thread from the proxy return value of `Comlink.wrap()` or `Comlink.proxy()`.\n */\nexport type Remote<T> =\n  // Handle properties\n  RemoteObject<T> &\n    // Handle call signature (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: UnproxyOrClone<TArguments[I]> }\n        ) => Promisify<ProxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: UnproxyOrClone<TArguments[I]>;\n            }\n          ): Promisify<Remote<TInstance>>;\n        }\n      : unknown) &\n    // Include additional special comlink methods available on the proxy.\n    ProxyMethods;\n\n/**\n * Expresses that a type can be either a sync or async.\n */\ntype MaybePromise<T> = Promise<T> | T;\n\n/**\n * Takes the raw type of a remote object, function or class as a remote thread would see it through a proxy (e.g. when\n * passed in as a function argument) and returns the type the local thread has to supply.\n *\n * This is the inverse of `Remote<T>`. It takes a `Remote<T>` and returns its original input `T`.\n */\nexport type Local<T> =\n  // Omit the special proxy methods (they don't need to be supplied, comlink adds them)\n  Omit<LocalObject<T>, keyof ProxyMethods> &\n    // Handle call signatures (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: ProxyOrClone<TArguments[I]> }\n        ) => // The raw function could either be sync or async, but is always proxied automatically\n        MaybePromise<UnproxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: ProxyOrClone<TArguments[I]>;\n            }\n          ): // The raw constructor could either be sync or async, but is always proxied automatically\n          MaybePromise<Local<Unpromisify<TInstance>>>;\n        }\n      : unknown);\n\nconst isObject = (val: unknown): val is object =>\n  (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n\n/**\n * Customizes the serialization of certain values as determined by `canHandle()`.\n *\n * @template T The input type being handled by this transfer handler.\n * @template S The serialized type sent over the wire.\n */\nexport interface TransferHandler<T, S> {\n  /**\n   * Gets called for every value to determine whether this transfer handler\n   * should serialize the value, which includes checking that it is of the right\n   * type (but can perform checks beyond that as well).\n   */\n  canHandle(value: unknown): value is T;\n\n  /**\n   * Gets called with the value if `canHandle()` returned `true` to produce a\n   * value that can be sent in a message, consisting of structured-cloneable\n   * values and/or transferrable objects.\n   */\n  serialize(value: T): [S, Transferable[]];\n\n  /**\n   * Gets called to deserialize an incoming value that was serialized in the\n   * other thread with this transfer handler (known through the name it was\n   * registered under).\n   */\n  deserialize(value: S): T;\n}\n\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler: TransferHandler<object, MessagePort> = {\n  canHandle: (val): val is ProxyMarked =>\n    isObject(val) && (val as ProxyMarked)[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  },\n};\n\ninterface ThrownValue {\n  [throwMarker]: unknown; // just needs to be present\n  value: unknown;\n}\ntype SerializedThrownValue =\n  | { isError: true; value: Error }\n  | { isError: false; value: unknown };\n\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler: TransferHandler<\n  ThrownValue,\n  SerializedThrownValue\n> = {\n  canHandle: (value): value is ThrownValue =>\n    isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized: SerializedThrownValue;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack,\n        },\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(\n        new Error(serialized.value.message),\n        serialized.value\n      );\n    }\n    throw serialized.value;\n  },\n};\n\n/**\n * Allows customizing the serialization of certain values.\n */\nexport const transferHandlers = new Map<\n  string,\n  TransferHandler<unknown, unknown>\n>([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler],\n]);\n\nexport function expose(obj: any, ep: Endpoint = self as any) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message),\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue)\n      .catch((value) => {\n        return { value, [throwMarker]: 0 };\n      })\n      .then((returnValue) => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n        }\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  return createProxy<T>(ep, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = [],\n  target: object = function () {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: MessageType.RELEASE,\n            path: path.map((p) => p.toString()),\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map((p) => p.toString()),\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map((p) => p.toString()),\n          value,\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT,\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n  });\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer(obj: any, transfers: Transferable[]) {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T>(obj: T): T & ProxyMarked {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = self,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context),\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue,\n        },\n        transferables,\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value,\n    },\n    transferCache.get(value) || [],\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _initializerDefineProperty(target, property, descriptor, context) {\n  if (!descriptor) return;\n  Object.defineProperty(target, property, {\n    enumerable: descriptor.enumerable,\n    configurable: descriptor.configurable,\n    writable: descriptor.writable,\n    value: descriptor.initializer ? descriptor.initializer.call(context) : void 0\n  });\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  return function () {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object.keys(descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object.defineProperty(target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import {Message} from \"protobufjs/light\";\n\n/**\n * Wrapper for protobuf Message, which allows quick & typed constructor unpacking.\n */\nexport default class ProtoWrapper<T extends object = object> extends Message<T>{\n    /**\n     * Shortcut to assign the given values to this object, then return it.\n     */\n    assign(values: Partial<this>): this {\n        return Object.assign(this, values)\n    }\n}\n","import {Field, Type} from \"protobufjs/light\";\nimport ProtoWrapper from \"./proto-wrapper\";\n\n@Type.d(\"ProtoSprite\")\nexport class ProtoSprite extends ProtoWrapper<ProtoSprite> {\n    @Field.d(1, \"string\", \"required\", \"\")\n    public id: string = '';\n\n    @Field.d(2, \"int32\", \"required\", 0)  // Use \"sint32\" if idx will be negative often.\n    public idx: number = 0;\n}\n","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import {TerrainAddPacket, TerrainErasePacket} from \"./terrainPackets\";\nimport ProtoWrapper from \"../../data/protobufs/proto-wrapper\";\nimport {ProtoBoard, ProtoTileStack} from \"../../data/protobufs/proto-tiles\";\nimport {EntityDeletePacket, EntityUpdatePacket} from \"./entityPackets\";\nimport {PingPacket, ReadyPacket, SignaturePacket} from \"./util-packets\";\nimport {MediaRequestPacket, MediaStatusPacket} from \"./media-packets\";\n\nexport const packetList: typeof ProtoWrapper[] = [\n    SignaturePacket,\n    ReadyPacket,\n    TerrainErasePacket,\n    TerrainAddPacket,\n    ProtoBoard,\n    ProtoTileStack,\n    EntityUpdatePacket,\n    EntityDeletePacket,\n    PingPacket,\n    MediaStatusPacket,\n    MediaRequestPacket\n];\n\nexport const packetMap: Record<string, number> = {};\n\nfor (let i=0; i<packetList.length; i++) {\n    packetMap[packetList[i].name] = i;\n}\n","import {Field, Type} from \"protobufjs/light\";\nimport ProtoWrapper from \"./proto-wrapper\";\nimport {ProtoSprite} from \"./proto-sprite\";\nimport {Entity} from \"../../controllers/entities\";\n\n@Type.d(\"ProtoEntity\")\nexport class ProtoEntity extends ProtoWrapper<ProtoEntity> {\n    @Field.d(1, ProtoSprite, \"required\")\n    public sprite: ProtoSprite = new ProtoSprite();\n\n    @Field.d(2, 'int32', \"required\")\n    public x: number = 0;\n\n    @Field.d(3, 'int32', \"required\")\n    public y: number = 0;\n\n    @Field.d(4, 'bool', \"required\")\n    public visible: boolean = false;\n\n    @Field.d(5, 'string', \"required\")\n    public color: string = '';\n\n    @Field.d(6, 'string', \"required\")\n    public id: string = '';\n\n    @Field.d(7, 'string', \"repeated\")\n    public owners: string[] = [];\n\n    @Field.d(8, 'bool', \"required\")\n    public saveToCampaign: boolean = false;\n\n    @Field.d(9, 'string', \"required\")\n    public name: string = '';\n\n    public static fromEntity(entity: Entity) {\n        const sprite = new ProtoSprite().assign({id: entity.sprite.id, idx: entity.sprite.idx})\n        return new ProtoEntity().assign({\n            ...entity,\n            sprite,\n            owners: Array.from(entity.owners)\n        });\n    }\n}\n","import {Field, Type} from \"protobufjs/light\";\nimport ProtoWrapper from './proto-wrapper';\nimport {ProtoSprite} from \"./proto-sprite\";\nimport {ProtoEntity} from \"./proto-entity\";\n\n\n@Type.d(\"ProtoTile\")\nexport class ProtoTile extends ProtoWrapper<ProtoTile> {\n    @Field.d(1, \"int32\", \"required\", 0)\n    public x: number = 0;\n\n    @Field.d(2, \"int32\", \"required\", 0)\n    public y: number = 0;\n\n    @Field.d(3, \"int32\", \"required\", 0)\n    public z: number = 0;\n\n    @Field.d(4, \"int32\", \"required\", 0)\n    public spriteIdx: number = 0;\n}\n\n@Type.d(\"ProtoTileStack\")\nexport class ProtoTileStack extends ProtoWrapper<ProtoBoard> {\n    @Field.d(1, ProtoTile, \"repeated\")\n    public tiles: ProtoTile[] = [];\n\n    @Field.d(2, ProtoSprite, \"repeated\")\n    public sprites: ProtoSprite[] = [];\n}\n\n\n@Type.d(\"ProtoBoard\")\nexport class ProtoBoard extends ProtoWrapper<ProtoBoard> {\n    @Field.d(1, ProtoTileStack, \"required\")\n    public terrain: ProtoTileStack|null = null;\n    @Field.d(2, ProtoEntity, \"repeated\")\n    public entities: ProtoEntity[] = [];\n}\n","import {Field, Type} from \"protobufjs/light\";\nimport ProtoWrapper from \"../../data/protobufs/proto-wrapper\";\nimport {ProtoTileStack} from \"../../data/protobufs/proto-tiles\";\n\n@Type.d(\"TerrainAddPacket\")\nexport class TerrainAddPacket extends ProtoWrapper<TerrainAddPacket> {\n    @Field.d(1, ProtoTileStack, \"repeated\")\n    public tileStacks: ProtoTileStack[] = [];\n}\n\n@Type.d(\"TerrainCoordPacket\")\nexport class TerrainCoordPacket extends ProtoWrapper<TerrainCoordPacket> {\n    @Field.d(1, 'int32', \"required\")\n    public x: number = 0;\n    @Field.d(2, 'int32', \"required\")\n    public y: number = 0;\n}\n\n@Type.d(\"TerrainErasePacket\")\nexport class TerrainErasePacket extends ProtoWrapper<TerrainErasePacket> {\n    @Field.d(1, TerrainCoordPacket, \"repeated\")\n    public coords: TerrainCoordPacket[] = [];\n}\n","import {Field, Type} from \"protobufjs/light\";\nimport ProtoWrapper from \"../../data/protobufs/proto-wrapper\";\nimport {ProtoEntity} from \"../../data/protobufs/proto-entity\";\n\n\n@Type.d(\"EntityUpdatePacket\")\nexport class EntityUpdatePacket extends ProtoWrapper<EntityUpdatePacket> {\n    @Field.d(1, ProtoEntity, \"repeated\")\n    public entities: ProtoEntity[] = [];\n}\n\n\n@Type.d(\"EntityDeletePacket\")\nexport class EntityDeletePacket extends ProtoWrapper<EntityDeletePacket> {\n    @Field.d(1, 'string', \"required\")\n    public entityID: string = '';\n}\n","import {Field, Type} from \"protobufjs/light\";\nimport ProtoWrapper from \"../../data/protobufs/proto-wrapper\";\n\n@Type.d(\"PingPacket\")\nexport class PingPacket extends ProtoWrapper<PingPacket> {}\n\n@Type.d(\"SignaturePacket\")\nexport class SignaturePacket extends ProtoWrapper<SignaturePacket> {\n    @Field.d(1, \"string\", \"required\", 'def')\n    public signedJSON: string = '';\n}\n\n@Type.d(\"ReadyPacket\")\nexport class ReadyPacket extends ProtoWrapper<ReadyPacket> {}\n","import {Field, Type} from \"protobufjs/light\";\nimport ProtoWrapper from \"../../data/protobufs/proto-wrapper\";\n\n@Type.d(\"MediaStatusPacket\")\nexport class MediaStatusPacket extends ProtoWrapper<MediaStatusPacket> {\n    @Field.d(1, 'string', \"required\")\n    public currentVideo: string = '';\n    @Field.d(2, 'uint32', \"required\")\n    public playbackRate: number = 1;\n    @Field.d(3, 'bool', \"required\")\n    public paused: boolean = false;\n    @Field.d(4, 'uint32', \"required\")\n    public currentTime: number = 0;\n}\n\n\n@Type.d(\"MediaRequestPacket\")\nexport class MediaRequestPacket extends ProtoWrapper<MediaRequestPacket> {}\n","import { expose } from 'comlink';\n  import _regeneratorRuntime from\"/home/runner/work/Terra/Terra/web-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/runner/work/Terra/Terra/web-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import pako from\"pako\";import{packetList}from\"./packets/packet-list\";export function workerEncode(_x,_x2){return _workerEncode.apply(this,arguments);}function _workerEncode(){_workerEncode=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(packet,id){var clazz,dat,data,combined;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:clazz=packetList[id];if(clazz){_context.next=3;break;}throw Error(\"Error encoding packet: Unknown type: \\\"\".concat(packet.constructor.name,\"\\\"!\"));case 3:console.debug('Worker got:',id,clazz,packet);dat=clazz.encode(packet).finish();console.debug('dat encoded:',dat);data=pako.deflate(dat,{level:9});combined=new Uint8Array(1+data.length);combined.set([id]);combined.set(data,1);console.debug('Worker encoded:',id,data);return _context.abrupt(\"return\",combined);case 12:case\"end\":return _context.stop();}}},_callee);}));return _workerEncode.apply(this,arguments);}export function workerDecode(_x3){return _workerDecode.apply(this,arguments);}function _workerDecode(){_workerDecode=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data){var id,clazz;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:id=data.slice(0,1)[0];clazz=packetList[id];if(clazz){_context2.next=4;break;}throw Error(\"Error decoding packet: Unknown ID: [\".concat(id,\"]!\"));case 4:return _context2.abrupt(\"return\",clazz.decode(pako.inflate(data.slice(1))));case 5:case\"end\":return _context2.stop();}}},_callee2);}));return _workerDecode.apply(this,arguments);};\n  expose(\n    Object.keys(__webpack_exports__).reduce(function(r,k){\n      if (k=='__esModule') return r;\n      r[k] = __webpack_exports__[k];\n      return r\n    },{})\n  )"],"sourceRoot":""}